// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: svm.proto

#include "svm.pb.h"

#include <algorithm>

#include <google/protobuf/stubs/common.h>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/extension_set.h>
#include <google/protobuf/wire_format_lite_inl.h>
#include <google/protobuf/descriptor.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/reflection_ops.h>
#include <google/protobuf/wire_format.h>
// @@protoc_insertion_point(includes)
#include <google/protobuf/port_def.inc>

extern PROTOBUF_INTERNAL_EXPORT_svm_2eproto ::google::protobuf::internal::SCCInfo<0> scc_info_ColumnInfo_svm_2eproto;
extern PROTOBUF_INTERNAL_EXPORT_svm_2eproto ::google::protobuf::internal::SCCInfo<0> scc_info_OperatorInfo_ArgsEntry_DoNotUse_svm_2eproto;
extern PROTOBUF_INTERNAL_EXPORT_svm_2eproto ::google::protobuf::internal::SCCInfo<0> scc_info_UDFInfo_svm_2eproto;
extern PROTOBUF_INTERNAL_EXPORT_svm_2eproto ::google::protobuf::internal::SCCInfo<1> scc_info_DependencyInfo_svm_2eproto;
extern PROTOBUF_INTERNAL_EXPORT_svm_2eproto ::google::protobuf::internal::SCCInfo<1> scc_info_ObjectInfo_svm_2eproto;
extern PROTOBUF_INTERNAL_EXPORT_svm_2eproto ::google::protobuf::internal::SCCInfo<1> scc_info_PipelineInfo_svm_2eproto;
extern PROTOBUF_INTERNAL_EXPORT_svm_2eproto ::google::protobuf::internal::SCCInfo<3> scc_info_OperatorInfo_svm_2eproto;
namespace ShadowVM {
class HelloRequestDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<HelloRequest> _instance;
} _HelloRequest_default_instance_;
class TestRequestDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<TestRequest> _instance;
} _TestRequest_default_instance_;
class HelloReplyDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<HelloReply> _instance;
} _HelloReply_default_instance_;
class TestReplyDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<TestReply> _instance;
} _TestReply_default_instance_;
class BulkInfoDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<BulkInfo> _instance;
} _BulkInfo_default_instance_;
class ColumnInfoDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<ColumnInfo> _instance;
} _ColumnInfo_default_instance_;
class ObjectInfoDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<ObjectInfo> _instance;
} _ObjectInfo_default_instance_;
class DependencyInfoDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<DependencyInfo> _instance;
} _DependencyInfo_default_instance_;
class OperatorInfo_ArgsEntry_DoNotUseDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<OperatorInfo_ArgsEntry_DoNotUse> _instance;
} _OperatorInfo_ArgsEntry_DoNotUse_default_instance_;
class OperatorInfoDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<OperatorInfo> _instance;
} _OperatorInfo_default_instance_;
class UDFInfoDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<UDFInfo> _instance;
} _UDFInfo_default_instance_;
class PipelineInfoDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<PipelineInfo> _instance;
} _PipelineInfo_default_instance_;
class GraphInfoDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<GraphInfo> _instance;
} _GraphInfo_default_instance_;
class RetDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<Ret> _instance;
} _Ret_default_instance_;
}  // namespace ShadowVM
static void InitDefaultsHelloRequest_svm_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::ShadowVM::_HelloRequest_default_instance_;
    new (ptr) ::ShadowVM::HelloRequest();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::ShadowVM::HelloRequest::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_HelloRequest_svm_2eproto =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsHelloRequest_svm_2eproto}, {}};

static void InitDefaultsTestRequest_svm_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::ShadowVM::_TestRequest_default_instance_;
    new (ptr) ::ShadowVM::TestRequest();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::ShadowVM::TestRequest::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_TestRequest_svm_2eproto =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsTestRequest_svm_2eproto}, {}};

static void InitDefaultsHelloReply_svm_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::ShadowVM::_HelloReply_default_instance_;
    new (ptr) ::ShadowVM::HelloReply();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::ShadowVM::HelloReply::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_HelloReply_svm_2eproto =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsHelloReply_svm_2eproto}, {}};

static void InitDefaultsTestReply_svm_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::ShadowVM::_TestReply_default_instance_;
    new (ptr) ::ShadowVM::TestReply();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::ShadowVM::TestReply::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_TestReply_svm_2eproto =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsTestReply_svm_2eproto}, {}};

static void InitDefaultsBulkInfo_svm_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::ShadowVM::_BulkInfo_default_instance_;
    new (ptr) ::ShadowVM::BulkInfo();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::ShadowVM::BulkInfo::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_BulkInfo_svm_2eproto =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsBulkInfo_svm_2eproto}, {}};

static void InitDefaultsColumnInfo_svm_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::ShadowVM::_ColumnInfo_default_instance_;
    new (ptr) ::ShadowVM::ColumnInfo();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::ShadowVM::ColumnInfo::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_ColumnInfo_svm_2eproto =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsColumnInfo_svm_2eproto}, {}};

static void InitDefaultsObjectInfo_svm_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::ShadowVM::_ObjectInfo_default_instance_;
    new (ptr) ::ShadowVM::ObjectInfo();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::ShadowVM::ObjectInfo::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<1> scc_info_ObjectInfo_svm_2eproto =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 1, InitDefaultsObjectInfo_svm_2eproto}, {
      &scc_info_ColumnInfo_svm_2eproto.base,}};

static void InitDefaultsDependencyInfo_svm_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::ShadowVM::_DependencyInfo_default_instance_;
    new (ptr) ::ShadowVM::DependencyInfo();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::ShadowVM::DependencyInfo::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<1> scc_info_DependencyInfo_svm_2eproto =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 1, InitDefaultsDependencyInfo_svm_2eproto}, {
      &scc_info_ObjectInfo_svm_2eproto.base,}};

static void InitDefaultsOperatorInfo_ArgsEntry_DoNotUse_svm_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::ShadowVM::_OperatorInfo_ArgsEntry_DoNotUse_default_instance_;
    new (ptr) ::ShadowVM::OperatorInfo_ArgsEntry_DoNotUse();
  }
  ::ShadowVM::OperatorInfo_ArgsEntry_DoNotUse::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_OperatorInfo_ArgsEntry_DoNotUse_svm_2eproto =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsOperatorInfo_ArgsEntry_DoNotUse_svm_2eproto}, {}};

static void InitDefaultsOperatorInfo_svm_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::ShadowVM::_OperatorInfo_default_instance_;
    new (ptr) ::ShadowVM::OperatorInfo();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::ShadowVM::OperatorInfo::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<3> scc_info_OperatorInfo_svm_2eproto =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 3, InitDefaultsOperatorInfo_svm_2eproto}, {
      &scc_info_DependencyInfo_svm_2eproto.base,
      &scc_info_OperatorInfo_ArgsEntry_DoNotUse_svm_2eproto.base,
      &scc_info_ObjectInfo_svm_2eproto.base,}};

static void InitDefaultsUDFInfo_svm_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::ShadowVM::_UDFInfo_default_instance_;
    new (ptr) ::ShadowVM::UDFInfo();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::ShadowVM::UDFInfo::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_UDFInfo_svm_2eproto =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsUDFInfo_svm_2eproto}, {}};

static void InitDefaultsPipelineInfo_svm_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::ShadowVM::_PipelineInfo_default_instance_;
    new (ptr) ::ShadowVM::PipelineInfo();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::ShadowVM::PipelineInfo::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<1> scc_info_PipelineInfo_svm_2eproto =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 1, InitDefaultsPipelineInfo_svm_2eproto}, {
      &scc_info_OperatorInfo_svm_2eproto.base,}};

static void InitDefaultsGraphInfo_svm_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::ShadowVM::_GraphInfo_default_instance_;
    new (ptr) ::ShadowVM::GraphInfo();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::ShadowVM::GraphInfo::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<2> scc_info_GraphInfo_svm_2eproto =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 2, InitDefaultsGraphInfo_svm_2eproto}, {
      &scc_info_PipelineInfo_svm_2eproto.base,
      &scc_info_UDFInfo_svm_2eproto.base,}};

static void InitDefaultsRet_svm_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::ShadowVM::_Ret_default_instance_;
    new (ptr) ::ShadowVM::Ret();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::ShadowVM::Ret::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_Ret_svm_2eproto =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsRet_svm_2eproto}, {}};

void InitDefaults_svm_2eproto() {
  ::google::protobuf::internal::InitSCC(&scc_info_HelloRequest_svm_2eproto.base);
  ::google::protobuf::internal::InitSCC(&scc_info_TestRequest_svm_2eproto.base);
  ::google::protobuf::internal::InitSCC(&scc_info_HelloReply_svm_2eproto.base);
  ::google::protobuf::internal::InitSCC(&scc_info_TestReply_svm_2eproto.base);
  ::google::protobuf::internal::InitSCC(&scc_info_BulkInfo_svm_2eproto.base);
  ::google::protobuf::internal::InitSCC(&scc_info_ColumnInfo_svm_2eproto.base);
  ::google::protobuf::internal::InitSCC(&scc_info_ObjectInfo_svm_2eproto.base);
  ::google::protobuf::internal::InitSCC(&scc_info_DependencyInfo_svm_2eproto.base);
  ::google::protobuf::internal::InitSCC(&scc_info_OperatorInfo_ArgsEntry_DoNotUse_svm_2eproto.base);
  ::google::protobuf::internal::InitSCC(&scc_info_OperatorInfo_svm_2eproto.base);
  ::google::protobuf::internal::InitSCC(&scc_info_UDFInfo_svm_2eproto.base);
  ::google::protobuf::internal::InitSCC(&scc_info_PipelineInfo_svm_2eproto.base);
  ::google::protobuf::internal::InitSCC(&scc_info_GraphInfo_svm_2eproto.base);
  ::google::protobuf::internal::InitSCC(&scc_info_Ret_svm_2eproto.base);
}

::google::protobuf::Metadata file_level_metadata_svm_2eproto[14];
const ::google::protobuf::EnumDescriptor* file_level_enum_descriptors_svm_2eproto[5];
constexpr ::google::protobuf::ServiceDescriptor const** file_level_service_descriptors_svm_2eproto = nullptr;

const ::google::protobuf::uint32 TableStruct_svm_2eproto::offsets[] PROTOBUF_SECTION_VARIABLE(protodesc_cold) = {
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::ShadowVM::HelloRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::ShadowVM::HelloRequest, name_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::ShadowVM::TestRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::ShadowVM::TestRequest, name_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::ShadowVM::HelloReply, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::ShadowVM::HelloReply, message_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::ShadowVM::TestReply, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::ShadowVM::TestReply, message_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::ShadowVM::BulkInfo, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::ShadowVM::BulkInfo, stotype_),
  PROTOBUF_FIELD_OFFSET(::ShadowVM::BulkInfo, count_),
  PROTOBUF_FIELD_OFFSET(::ShadowVM::BulkInfo, size_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::ShadowVM::ColumnInfo, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::ShadowVM::ColumnInfo, id_),
  PROTOBUF_FIELD_OFFSET(::ShadowVM::ColumnInfo, type_),
  PROTOBUF_FIELD_OFFSET(::ShadowVM::ColumnInfo, isnull_),
  PROTOBUF_FIELD_OFFSET(::ShadowVM::ColumnInfo, dim_),
  PROTOBUF_FIELD_OFFSET(::ShadowVM::ColumnInfo, val_size_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::ShadowVM::ObjectInfo, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::ShadowVM::ObjectInfo, id_),
  PROTOBUF_FIELD_OFFSET(::ShadowVM::ObjectInfo, host_),
  PROTOBUF_FIELD_OFFSET(::ShadowVM::ObjectInfo, column_list_),
  PROTOBUF_FIELD_OFFSET(::ShadowVM::ObjectInfo, storage_),
  PROTOBUF_FIELD_OFFSET(::ShadowVM::ObjectInfo, path_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::ShadowVM::DependencyInfo, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::ShadowVM::DependencyInfo, pre_object_),
  PROTOBUF_FIELD_OFFSET(::ShadowVM::DependencyInfo, type_),
  PROTOBUF_FIELD_OFFSET(::ShadowVM::DependencyInfo, shard_id_),
  PROTOBUF_FIELD_OFFSET(::ShadowVM::OperatorInfo_ArgsEntry_DoNotUse, _has_bits_),
  PROTOBUF_FIELD_OFFSET(::ShadowVM::OperatorInfo_ArgsEntry_DoNotUse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::ShadowVM::OperatorInfo_ArgsEntry_DoNotUse, key_),
  PROTOBUF_FIELD_OFFSET(::ShadowVM::OperatorInfo_ArgsEntry_DoNotUse, value_),
  0,
  1,
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::ShadowVM::OperatorInfo, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::ShadowVM::OperatorInfo, id_),
  PROTOBUF_FIELD_OFFSET(::ShadowVM::OperatorInfo, type_),
  PROTOBUF_FIELD_OFFSET(::ShadowVM::OperatorInfo, input_),
  PROTOBUF_FIELD_OFFSET(::ShadowVM::OperatorInfo, args_),
  PROTOBUF_FIELD_OFFSET(::ShadowVM::OperatorInfo, output_),
  PROTOBUF_FIELD_OFFSET(::ShadowVM::OperatorInfo, perf_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::ShadowVM::UDFInfo, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::ShadowVM::UDFInfo, name_),
  PROTOBUF_FIELD_OFFSET(::ShadowVM::UDFInfo, para_list_),
  PROTOBUF_FIELD_OFFSET(::ShadowVM::UDFInfo, return__),
  PROTOBUF_FIELD_OFFSET(::ShadowVM::UDFInfo, expression_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::ShadowVM::PipelineInfo, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::ShadowVM::PipelineInfo, id_),
  PROTOBUF_FIELD_OFFSET(::ShadowVM::PipelineInfo, workflow_),
  PROTOBUF_FIELD_OFFSET(::ShadowVM::PipelineInfo, pre_pipeline_id_),
  PROTOBUF_FIELD_OFFSET(::ShadowVM::PipelineInfo, codegen_),
  PROTOBUF_FIELD_OFFSET(::ShadowVM::PipelineInfo, debug_),
  PROTOBUF_FIELD_OFFSET(::ShadowVM::PipelineInfo, isgpu_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::ShadowVM::GraphInfo, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::ShadowVM::GraphInfo, id_),
  PROTOBUF_FIELD_OFFSET(::ShadowVM::GraphInfo, pipeline_list_),
  PROTOBUF_FIELD_OFFSET(::ShadowVM::GraphInfo, udf_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::ShadowVM::Ret, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::ShadowVM::Ret, success_),
  PROTOBUF_FIELD_OFFSET(::ShadowVM::Ret, info_),
};
static const ::google::protobuf::internal::MigrationSchema schemas[] PROTOBUF_SECTION_VARIABLE(protodesc_cold) = {
  { 0, -1, sizeof(::ShadowVM::HelloRequest)},
  { 6, -1, sizeof(::ShadowVM::TestRequest)},
  { 12, -1, sizeof(::ShadowVM::HelloReply)},
  { 18, -1, sizeof(::ShadowVM::TestReply)},
  { 24, -1, sizeof(::ShadowVM::BulkInfo)},
  { 32, -1, sizeof(::ShadowVM::ColumnInfo)},
  { 42, -1, sizeof(::ShadowVM::ObjectInfo)},
  { 52, -1, sizeof(::ShadowVM::DependencyInfo)},
  { 60, 67, sizeof(::ShadowVM::OperatorInfo_ArgsEntry_DoNotUse)},
  { 69, -1, sizeof(::ShadowVM::OperatorInfo)},
  { 80, -1, sizeof(::ShadowVM::UDFInfo)},
  { 89, -1, sizeof(::ShadowVM::PipelineInfo)},
  { 100, -1, sizeof(::ShadowVM::GraphInfo)},
  { 108, -1, sizeof(::ShadowVM::Ret)},
};

static ::google::protobuf::Message const * const file_default_instances[] = {
  reinterpret_cast<const ::google::protobuf::Message*>(&::ShadowVM::_HelloRequest_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::ShadowVM::_TestRequest_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::ShadowVM::_HelloReply_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::ShadowVM::_TestReply_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::ShadowVM::_BulkInfo_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::ShadowVM::_ColumnInfo_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::ShadowVM::_ObjectInfo_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::ShadowVM::_DependencyInfo_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::ShadowVM::_OperatorInfo_ArgsEntry_DoNotUse_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::ShadowVM::_OperatorInfo_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::ShadowVM::_UDFInfo_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::ShadowVM::_PipelineInfo_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::ShadowVM::_GraphInfo_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::ShadowVM::_Ret_default_instance_),
};

::google::protobuf::internal::AssignDescriptorsTable assign_descriptors_table_svm_2eproto = {
  {}, AddDescriptors_svm_2eproto, "svm.proto", schemas,
  file_default_instances, TableStruct_svm_2eproto::offsets,
  file_level_metadata_svm_2eproto, 14, file_level_enum_descriptors_svm_2eproto, file_level_service_descriptors_svm_2eproto,
};

const char descriptor_table_protodef_svm_2eproto[] =
  "\n\tsvm.proto\022\010ShadowVM\"\034\n\014HelloRequest\022\014\n"
  "\004name\030\001 \001(\t\"\033\n\013TestRequest\022\014\n\004name\030\001 \001(\t"
  "\"\035\n\nHelloReply\022\017\n\007message\030\001 \001(\t\"\034\n\tTestR"
  "eply\022\017\n\007message\030\001 \001(\t\"K\n\010BulkInfo\022\"\n\007sto"
  "type\030\001 \001(\0162\021.ShadowVM.StoType\022\r\n\005count\030\002"
  " \001(\003\022\014\n\004size\030\003 \001(\003\"h\n\nColumnInfo\022\n\n\002id\030\001"
  " \001(\t\022\037\n\004type\030\002 \001(\0162\021.ShadowVM.ValType\022\016\n"
  "\006isnull\030\003 \001(\010\022\013\n\003dim\030\004 \003(\005\022\020\n\010val_size\030\005"
  " \001(\003\"\203\001\n\nObjectInfo\022\n\n\002id\030\001 \001(\t\022\014\n\004host\030"
  "\002 \001(\t\022)\n\013column_list\030\003 \003(\0132\024.ShadowVM.Co"
  "lumnInfo\022\"\n\007storage\030\004 \001(\0162\021.ShadowVM.Sto"
  "Type\022\014\n\004path\030\005 \001(\t\"\263\001\n\016DependencyInfo\022(\n"
  "\npre_object\030\001 \001(\0132\024.ShadowVM.ObjectInfo\022"
  "+\n\004type\030\002 \001(\0162\035.ShadowVM.DependencyInfo."
  "Type\022\020\n\010shard_id\030\003 \001(\005\"8\n\004Type\022\t\n\005Whole\020"
  "\000\022\021\n\rHashPartition\020\001\022\022\n\016RangePartition\020\002"
  "\"\261\003\n\014OperatorInfo\022\n\n\002id\030\001 \001(\t\022)\n\004type\030\002 "
  "\001(\0162\033.ShadowVM.OperatorInfo.Type\022\'\n\005inpu"
  "t\030\003 \003(\0132\030.ShadowVM.DependencyInfo\022.\n\004arg"
  "s\030\004 \003(\0132 .ShadowVM.OperatorInfo.ArgsEntr"
  "y\022$\n\006output\030\005 \001(\0132\024.ShadowVM.ObjectInfo\022"
  "/\n\004perf\030\006 \001(\0162!.ShadowVM.OperatorInfo.Pr"
  "eference\032+\n\tArgsEntry\022\013\n\003key\030\001 \001(\t\022\r\n\005va"
  "lue\030\002 \001(\t:\0028\001\"e\n\004Type\022\n\n\006Source\020\000\022\n\n\006Loa"
  "der\020\001\022\n\n\006Filter\020\002\022\007\n\003Map\020\003\022\014\n\010ReduceBy\020\004"
  "\022\n\n\006SortBy\020\005\022\014\n\010JoinWith\020\006\022\010\n\004Sink\020\007\"&\n\n"
  "Preference\022\007\n\003CPU\020\000\022\007\n\003GPU\020\001\022\006\n\002NO\020\002\"t\n\007"
  "UDFInfo\022\014\n\004name\030\001 \001(\t\022$\n\tpara_list\030\002 \003(\016"
  "2\021.ShadowVM.ValType\022!\n\006return\030\003 \001(\0162\021.Sh"
  "adowVM.ValType\022\022\n\nexpression\030\004 \001(\t\"\214\001\n\014P"
  "ipelineInfo\022\n\n\002id\030\001 \001(\t\022(\n\010workflow\030\002 \003("
  "\0132\026.ShadowVM.OperatorInfo\022\027\n\017pre_pipelin"
  "e_id\030\003 \003(\t\022\017\n\007codegen\030\004 \001(\010\022\r\n\005debug\030\005 \001"
  "(\010\022\r\n\005isGPU\030\006 \001(\010\"f\n\tGraphInfo\022\n\n\002id\030\001 \001"
  "(\t\022-\n\rpipeline_list\030\002 \003(\0132\026.ShadowVM.Pip"
  "elineInfo\022\036\n\003udf\030\003 \003(\0132\021.ShadowVM.UDFInf"
  "o\"$\n\003Ret\022\017\n\007success\030\001 \001(\010\022\014\n\004info\030\002 \001(\t*"
  ">\n\007StoType\022\010\n\004Disk\020\000\022\013\n\007HostMem\020\001\022\r\n\tDev"
  "iceMem\020\002\022\r\n\tSharedMem\020\003*s\n\007ValType\022\010\n\004By"
  "te\020\000\022\t\n\005Int16\020\001\022\t\n\005Int32\020\002\022\t\n\005Int64\020\003\022\013\n"
  "\007Float16\020\004\022\013\n\007Float32\020\005\022\013\n\007Float64\020\006\022\n\n\006"
  "String\020\007\022\n\n\006Tensor\020\0102~\n\007Greeter\022:\n\010SayHe"
  "llo\022\026.ShadowVM.HelloRequest\032\024.ShadowVM.H"
  "elloReply\"\000\0227\n\007SayTest\022\025.ShadowVM.TestRe"
  "quest\032\023.ShadowVM.TestReply\"\0002H\n\013ShadowVM"
  "API\0229\n\016RunPipelineCMD\022\026.ShadowVM.Pipelin"
  "eInfo\032\r.ShadowVM.Ret\"\000B!\n\010ShadowVMB\rShad"
  "owVMProtoP\001\242\002\003HLWb\006proto3"
  ;
::google::protobuf::internal::DescriptorTable descriptor_table_svm_2eproto = {
  false, InitDefaults_svm_2eproto, 
  descriptor_table_protodef_svm_2eproto,
  "svm.proto", &assign_descriptors_table_svm_2eproto, 1905,
};

void AddDescriptors_svm_2eproto() {
  static constexpr ::google::protobuf::internal::InitFunc deps[1] =
  {
  };
 ::google::protobuf::internal::AddDescriptors(&descriptor_table_svm_2eproto, deps, 0);
}

// Force running AddDescriptors() at dynamic initialization time.
static bool dynamic_init_dummy_svm_2eproto = []() { AddDescriptors_svm_2eproto(); return true; }();
namespace ShadowVM {
const ::google::protobuf::EnumDescriptor* DependencyInfo_Type_descriptor() {
  ::google::protobuf::internal::AssignDescriptors(&assign_descriptors_table_svm_2eproto);
  return file_level_enum_descriptors_svm_2eproto[0];
}
bool DependencyInfo_Type_IsValid(int value) {
  switch (value) {
    case 0:
    case 1:
    case 2:
      return true;
    default:
      return false;
  }
}

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const DependencyInfo_Type DependencyInfo::Whole;
const DependencyInfo_Type DependencyInfo::HashPartition;
const DependencyInfo_Type DependencyInfo::RangePartition;
const DependencyInfo_Type DependencyInfo::Type_MIN;
const DependencyInfo_Type DependencyInfo::Type_MAX;
const int DependencyInfo::Type_ARRAYSIZE;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900
const ::google::protobuf::EnumDescriptor* OperatorInfo_Type_descriptor() {
  ::google::protobuf::internal::AssignDescriptors(&assign_descriptors_table_svm_2eproto);
  return file_level_enum_descriptors_svm_2eproto[1];
}
bool OperatorInfo_Type_IsValid(int value) {
  switch (value) {
    case 0:
    case 1:
    case 2:
    case 3:
    case 4:
    case 5:
    case 6:
    case 7:
      return true;
    default:
      return false;
  }
}

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const OperatorInfo_Type OperatorInfo::Source;
const OperatorInfo_Type OperatorInfo::Loader;
const OperatorInfo_Type OperatorInfo::Filter;
const OperatorInfo_Type OperatorInfo::Map;
const OperatorInfo_Type OperatorInfo::ReduceBy;
const OperatorInfo_Type OperatorInfo::SortBy;
const OperatorInfo_Type OperatorInfo::JoinWith;
const OperatorInfo_Type OperatorInfo::Sink;
const OperatorInfo_Type OperatorInfo::Type_MIN;
const OperatorInfo_Type OperatorInfo::Type_MAX;
const int OperatorInfo::Type_ARRAYSIZE;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900
const ::google::protobuf::EnumDescriptor* OperatorInfo_Preference_descriptor() {
  ::google::protobuf::internal::AssignDescriptors(&assign_descriptors_table_svm_2eproto);
  return file_level_enum_descriptors_svm_2eproto[2];
}
bool OperatorInfo_Preference_IsValid(int value) {
  switch (value) {
    case 0:
    case 1:
    case 2:
      return true;
    default:
      return false;
  }
}

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const OperatorInfo_Preference OperatorInfo::CPU;
const OperatorInfo_Preference OperatorInfo::GPU;
const OperatorInfo_Preference OperatorInfo::NO;
const OperatorInfo_Preference OperatorInfo::Preference_MIN;
const OperatorInfo_Preference OperatorInfo::Preference_MAX;
const int OperatorInfo::Preference_ARRAYSIZE;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900
const ::google::protobuf::EnumDescriptor* StoType_descriptor() {
  ::google::protobuf::internal::AssignDescriptors(&assign_descriptors_table_svm_2eproto);
  return file_level_enum_descriptors_svm_2eproto[3];
}
bool StoType_IsValid(int value) {
  switch (value) {
    case 0:
    case 1:
    case 2:
    case 3:
      return true;
    default:
      return false;
  }
}

const ::google::protobuf::EnumDescriptor* ValType_descriptor() {
  ::google::protobuf::internal::AssignDescriptors(&assign_descriptors_table_svm_2eproto);
  return file_level_enum_descriptors_svm_2eproto[4];
}
bool ValType_IsValid(int value) {
  switch (value) {
    case 0:
    case 1:
    case 2:
    case 3:
    case 4:
    case 5:
    case 6:
    case 7:
    case 8:
      return true;
    default:
      return false;
  }
}


// ===================================================================

void HelloRequest::InitAsDefaultInstance() {
}
class HelloRequest::HasBitSetters {
 public:
};

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int HelloRequest::kNameFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

HelloRequest::HelloRequest()
  : ::google::protobuf::Message(), _internal_metadata_(nullptr) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:ShadowVM.HelloRequest)
}
HelloRequest::HelloRequest(const HelloRequest& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(nullptr) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.name().size() > 0) {
    name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.name_);
  }
  // @@protoc_insertion_point(copy_constructor:ShadowVM.HelloRequest)
}

void HelloRequest::SharedCtor() {
  ::google::protobuf::internal::InitSCC(
      &scc_info_HelloRequest_svm_2eproto.base);
  name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

HelloRequest::~HelloRequest() {
  // @@protoc_insertion_point(destructor:ShadowVM.HelloRequest)
  SharedDtor();
}

void HelloRequest::SharedDtor() {
  name_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void HelloRequest::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const HelloRequest& HelloRequest::default_instance() {
  ::google::protobuf::internal::InitSCC(&::scc_info_HelloRequest_svm_2eproto.base);
  return *internal_default_instance();
}


void HelloRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:ShadowVM.HelloRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  _internal_metadata_.Clear();
}

#if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
const char* HelloRequest::_InternalParse(const char* begin, const char* end, void* object,
                  ::google::protobuf::internal::ParseContext* ctx) {
  auto msg = static_cast<HelloRequest*>(object);
  ::google::protobuf::int32 size; (void)size;
  int depth; (void)depth;
  ::google::protobuf::uint32 tag;
  ::google::protobuf::internal::ParseFunc parser_till_end; (void)parser_till_end;
  auto ptr = begin;
  while (ptr < end) {
    ptr = ::google::protobuf::io::Parse32(ptr, &tag);
    GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
    switch (tag >> 3) {
      // string name = 1;
      case 1: {
        if (static_cast<::google::protobuf::uint8>(tag) != 10) goto handle_unusual;
        ptr = ::google::protobuf::io::ReadSize(ptr, &size);
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        ctx->extra_parse_data().SetFieldName("ShadowVM.HelloRequest.name");
        object = msg->mutable_name();
        if (size > end - ptr + ::google::protobuf::internal::ParseContext::kSlopBytes) {
          parser_till_end = ::google::protobuf::internal::GreedyStringParserUTF8;
          goto string_till_end;
        }
        GOOGLE_PROTOBUF_PARSER_ASSERT(::google::protobuf::internal::StringCheckUTF8(ptr, size, ctx));
        ::google::protobuf::internal::InlineGreedyStringParser(object, ptr, size, ctx);
        ptr += size;
        break;
      }
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->EndGroup(tag);
          return ptr;
        }
        auto res = UnknownFieldParse(tag, {_InternalParse, msg},
          ptr, end, msg->_internal_metadata_.mutable_unknown_fields(), ctx);
        ptr = res.first;
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr != nullptr);
        if (res.second) return ptr;
      }
    }  // switch
  }  // while
  return ptr;
string_till_end:
  static_cast<::std::string*>(object)->clear();
  static_cast<::std::string*>(object)->reserve(size);
  goto len_delim_till_end;
len_delim_till_end:
  return ctx->StoreAndTailCall(ptr, end, {_InternalParse, msg},
                               {parser_till_end, object}, size);
}
#else  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
bool HelloRequest::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!PROTOBUF_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:ShadowVM.HelloRequest)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // string name = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (10 & 0xFF)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_name()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->name().data(), static_cast<int>(this->name().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "ShadowVM.HelloRequest.name"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:ShadowVM.HelloRequest)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:ShadowVM.HelloRequest)
  return false;
#undef DO_
}
#endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER

void HelloRequest::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:ShadowVM.HelloRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string name = 1;
  if (this->name().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->name().data(), static_cast<int>(this->name().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "ShadowVM.HelloRequest.name");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->name(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:ShadowVM.HelloRequest)
}

::google::protobuf::uint8* HelloRequest::InternalSerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:ShadowVM.HelloRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string name = 1;
  if (this->name().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->name().data(), static_cast<int>(this->name().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "ShadowVM.HelloRequest.name");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->name(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:ShadowVM.HelloRequest)
  return target;
}

size_t HelloRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:ShadowVM.HelloRequest)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string name = 1;
  if (this->name().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->name());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void HelloRequest::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:ShadowVM.HelloRequest)
  GOOGLE_DCHECK_NE(&from, this);
  const HelloRequest* source =
      ::google::protobuf::DynamicCastToGenerated<HelloRequest>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:ShadowVM.HelloRequest)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:ShadowVM.HelloRequest)
    MergeFrom(*source);
  }
}

void HelloRequest::MergeFrom(const HelloRequest& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:ShadowVM.HelloRequest)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.name().size() > 0) {

    name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.name_);
  }
}

void HelloRequest::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:ShadowVM.HelloRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void HelloRequest::CopyFrom(const HelloRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:ShadowVM.HelloRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool HelloRequest::IsInitialized() const {
  return true;
}

void HelloRequest::Swap(HelloRequest* other) {
  if (other == this) return;
  InternalSwap(other);
}
void HelloRequest::InternalSwap(HelloRequest* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
  name_.Swap(&other->name_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
}

::google::protobuf::Metadata HelloRequest::GetMetadata() const {
  ::google::protobuf::internal::AssignDescriptors(&::assign_descriptors_table_svm_2eproto);
  return ::file_level_metadata_svm_2eproto[kIndexInFileMessages];
}


// ===================================================================

void TestRequest::InitAsDefaultInstance() {
}
class TestRequest::HasBitSetters {
 public:
};

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int TestRequest::kNameFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

TestRequest::TestRequest()
  : ::google::protobuf::Message(), _internal_metadata_(nullptr) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:ShadowVM.TestRequest)
}
TestRequest::TestRequest(const TestRequest& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(nullptr) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.name().size() > 0) {
    name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.name_);
  }
  // @@protoc_insertion_point(copy_constructor:ShadowVM.TestRequest)
}

void TestRequest::SharedCtor() {
  ::google::protobuf::internal::InitSCC(
      &scc_info_TestRequest_svm_2eproto.base);
  name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

TestRequest::~TestRequest() {
  // @@protoc_insertion_point(destructor:ShadowVM.TestRequest)
  SharedDtor();
}

void TestRequest::SharedDtor() {
  name_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void TestRequest::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const TestRequest& TestRequest::default_instance() {
  ::google::protobuf::internal::InitSCC(&::scc_info_TestRequest_svm_2eproto.base);
  return *internal_default_instance();
}


void TestRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:ShadowVM.TestRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  _internal_metadata_.Clear();
}

#if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
const char* TestRequest::_InternalParse(const char* begin, const char* end, void* object,
                  ::google::protobuf::internal::ParseContext* ctx) {
  auto msg = static_cast<TestRequest*>(object);
  ::google::protobuf::int32 size; (void)size;
  int depth; (void)depth;
  ::google::protobuf::uint32 tag;
  ::google::protobuf::internal::ParseFunc parser_till_end; (void)parser_till_end;
  auto ptr = begin;
  while (ptr < end) {
    ptr = ::google::protobuf::io::Parse32(ptr, &tag);
    GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
    switch (tag >> 3) {
      // string name = 1;
      case 1: {
        if (static_cast<::google::protobuf::uint8>(tag) != 10) goto handle_unusual;
        ptr = ::google::protobuf::io::ReadSize(ptr, &size);
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        ctx->extra_parse_data().SetFieldName("ShadowVM.TestRequest.name");
        object = msg->mutable_name();
        if (size > end - ptr + ::google::protobuf::internal::ParseContext::kSlopBytes) {
          parser_till_end = ::google::protobuf::internal::GreedyStringParserUTF8;
          goto string_till_end;
        }
        GOOGLE_PROTOBUF_PARSER_ASSERT(::google::protobuf::internal::StringCheckUTF8(ptr, size, ctx));
        ::google::protobuf::internal::InlineGreedyStringParser(object, ptr, size, ctx);
        ptr += size;
        break;
      }
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->EndGroup(tag);
          return ptr;
        }
        auto res = UnknownFieldParse(tag, {_InternalParse, msg},
          ptr, end, msg->_internal_metadata_.mutable_unknown_fields(), ctx);
        ptr = res.first;
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr != nullptr);
        if (res.second) return ptr;
      }
    }  // switch
  }  // while
  return ptr;
string_till_end:
  static_cast<::std::string*>(object)->clear();
  static_cast<::std::string*>(object)->reserve(size);
  goto len_delim_till_end;
len_delim_till_end:
  return ctx->StoreAndTailCall(ptr, end, {_InternalParse, msg},
                               {parser_till_end, object}, size);
}
#else  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
bool TestRequest::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!PROTOBUF_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:ShadowVM.TestRequest)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // string name = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (10 & 0xFF)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_name()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->name().data(), static_cast<int>(this->name().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "ShadowVM.TestRequest.name"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:ShadowVM.TestRequest)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:ShadowVM.TestRequest)
  return false;
#undef DO_
}
#endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER

void TestRequest::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:ShadowVM.TestRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string name = 1;
  if (this->name().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->name().data(), static_cast<int>(this->name().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "ShadowVM.TestRequest.name");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->name(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:ShadowVM.TestRequest)
}

::google::protobuf::uint8* TestRequest::InternalSerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:ShadowVM.TestRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string name = 1;
  if (this->name().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->name().data(), static_cast<int>(this->name().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "ShadowVM.TestRequest.name");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->name(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:ShadowVM.TestRequest)
  return target;
}

size_t TestRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:ShadowVM.TestRequest)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string name = 1;
  if (this->name().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->name());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void TestRequest::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:ShadowVM.TestRequest)
  GOOGLE_DCHECK_NE(&from, this);
  const TestRequest* source =
      ::google::protobuf::DynamicCastToGenerated<TestRequest>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:ShadowVM.TestRequest)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:ShadowVM.TestRequest)
    MergeFrom(*source);
  }
}

void TestRequest::MergeFrom(const TestRequest& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:ShadowVM.TestRequest)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.name().size() > 0) {

    name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.name_);
  }
}

void TestRequest::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:ShadowVM.TestRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void TestRequest::CopyFrom(const TestRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:ShadowVM.TestRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool TestRequest::IsInitialized() const {
  return true;
}

void TestRequest::Swap(TestRequest* other) {
  if (other == this) return;
  InternalSwap(other);
}
void TestRequest::InternalSwap(TestRequest* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
  name_.Swap(&other->name_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
}

::google::protobuf::Metadata TestRequest::GetMetadata() const {
  ::google::protobuf::internal::AssignDescriptors(&::assign_descriptors_table_svm_2eproto);
  return ::file_level_metadata_svm_2eproto[kIndexInFileMessages];
}


// ===================================================================

void HelloReply::InitAsDefaultInstance() {
}
class HelloReply::HasBitSetters {
 public:
};

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int HelloReply::kMessageFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

HelloReply::HelloReply()
  : ::google::protobuf::Message(), _internal_metadata_(nullptr) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:ShadowVM.HelloReply)
}
HelloReply::HelloReply(const HelloReply& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(nullptr) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  message_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.message().size() > 0) {
    message_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.message_);
  }
  // @@protoc_insertion_point(copy_constructor:ShadowVM.HelloReply)
}

void HelloReply::SharedCtor() {
  ::google::protobuf::internal::InitSCC(
      &scc_info_HelloReply_svm_2eproto.base);
  message_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

HelloReply::~HelloReply() {
  // @@protoc_insertion_point(destructor:ShadowVM.HelloReply)
  SharedDtor();
}

void HelloReply::SharedDtor() {
  message_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void HelloReply::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const HelloReply& HelloReply::default_instance() {
  ::google::protobuf::internal::InitSCC(&::scc_info_HelloReply_svm_2eproto.base);
  return *internal_default_instance();
}


void HelloReply::Clear() {
// @@protoc_insertion_point(message_clear_start:ShadowVM.HelloReply)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  message_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  _internal_metadata_.Clear();
}

#if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
const char* HelloReply::_InternalParse(const char* begin, const char* end, void* object,
                  ::google::protobuf::internal::ParseContext* ctx) {
  auto msg = static_cast<HelloReply*>(object);
  ::google::protobuf::int32 size; (void)size;
  int depth; (void)depth;
  ::google::protobuf::uint32 tag;
  ::google::protobuf::internal::ParseFunc parser_till_end; (void)parser_till_end;
  auto ptr = begin;
  while (ptr < end) {
    ptr = ::google::protobuf::io::Parse32(ptr, &tag);
    GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
    switch (tag >> 3) {
      // string message = 1;
      case 1: {
        if (static_cast<::google::protobuf::uint8>(tag) != 10) goto handle_unusual;
        ptr = ::google::protobuf::io::ReadSize(ptr, &size);
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        ctx->extra_parse_data().SetFieldName("ShadowVM.HelloReply.message");
        object = msg->mutable_message();
        if (size > end - ptr + ::google::protobuf::internal::ParseContext::kSlopBytes) {
          parser_till_end = ::google::protobuf::internal::GreedyStringParserUTF8;
          goto string_till_end;
        }
        GOOGLE_PROTOBUF_PARSER_ASSERT(::google::protobuf::internal::StringCheckUTF8(ptr, size, ctx));
        ::google::protobuf::internal::InlineGreedyStringParser(object, ptr, size, ctx);
        ptr += size;
        break;
      }
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->EndGroup(tag);
          return ptr;
        }
        auto res = UnknownFieldParse(tag, {_InternalParse, msg},
          ptr, end, msg->_internal_metadata_.mutable_unknown_fields(), ctx);
        ptr = res.first;
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr != nullptr);
        if (res.second) return ptr;
      }
    }  // switch
  }  // while
  return ptr;
string_till_end:
  static_cast<::std::string*>(object)->clear();
  static_cast<::std::string*>(object)->reserve(size);
  goto len_delim_till_end;
len_delim_till_end:
  return ctx->StoreAndTailCall(ptr, end, {_InternalParse, msg},
                               {parser_till_end, object}, size);
}
#else  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
bool HelloReply::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!PROTOBUF_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:ShadowVM.HelloReply)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // string message = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (10 & 0xFF)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_message()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->message().data(), static_cast<int>(this->message().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "ShadowVM.HelloReply.message"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:ShadowVM.HelloReply)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:ShadowVM.HelloReply)
  return false;
#undef DO_
}
#endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER

void HelloReply::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:ShadowVM.HelloReply)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string message = 1;
  if (this->message().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->message().data(), static_cast<int>(this->message().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "ShadowVM.HelloReply.message");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->message(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:ShadowVM.HelloReply)
}

::google::protobuf::uint8* HelloReply::InternalSerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:ShadowVM.HelloReply)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string message = 1;
  if (this->message().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->message().data(), static_cast<int>(this->message().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "ShadowVM.HelloReply.message");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->message(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:ShadowVM.HelloReply)
  return target;
}

size_t HelloReply::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:ShadowVM.HelloReply)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string message = 1;
  if (this->message().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->message());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void HelloReply::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:ShadowVM.HelloReply)
  GOOGLE_DCHECK_NE(&from, this);
  const HelloReply* source =
      ::google::protobuf::DynamicCastToGenerated<HelloReply>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:ShadowVM.HelloReply)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:ShadowVM.HelloReply)
    MergeFrom(*source);
  }
}

void HelloReply::MergeFrom(const HelloReply& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:ShadowVM.HelloReply)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.message().size() > 0) {

    message_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.message_);
  }
}

void HelloReply::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:ShadowVM.HelloReply)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void HelloReply::CopyFrom(const HelloReply& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:ShadowVM.HelloReply)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool HelloReply::IsInitialized() const {
  return true;
}

void HelloReply::Swap(HelloReply* other) {
  if (other == this) return;
  InternalSwap(other);
}
void HelloReply::InternalSwap(HelloReply* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
  message_.Swap(&other->message_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
}

::google::protobuf::Metadata HelloReply::GetMetadata() const {
  ::google::protobuf::internal::AssignDescriptors(&::assign_descriptors_table_svm_2eproto);
  return ::file_level_metadata_svm_2eproto[kIndexInFileMessages];
}


// ===================================================================

void TestReply::InitAsDefaultInstance() {
}
class TestReply::HasBitSetters {
 public:
};

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int TestReply::kMessageFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

TestReply::TestReply()
  : ::google::protobuf::Message(), _internal_metadata_(nullptr) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:ShadowVM.TestReply)
}
TestReply::TestReply(const TestReply& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(nullptr) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  message_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.message().size() > 0) {
    message_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.message_);
  }
  // @@protoc_insertion_point(copy_constructor:ShadowVM.TestReply)
}

void TestReply::SharedCtor() {
  ::google::protobuf::internal::InitSCC(
      &scc_info_TestReply_svm_2eproto.base);
  message_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

TestReply::~TestReply() {
  // @@protoc_insertion_point(destructor:ShadowVM.TestReply)
  SharedDtor();
}

void TestReply::SharedDtor() {
  message_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void TestReply::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const TestReply& TestReply::default_instance() {
  ::google::protobuf::internal::InitSCC(&::scc_info_TestReply_svm_2eproto.base);
  return *internal_default_instance();
}


void TestReply::Clear() {
// @@protoc_insertion_point(message_clear_start:ShadowVM.TestReply)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  message_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  _internal_metadata_.Clear();
}

#if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
const char* TestReply::_InternalParse(const char* begin, const char* end, void* object,
                  ::google::protobuf::internal::ParseContext* ctx) {
  auto msg = static_cast<TestReply*>(object);
  ::google::protobuf::int32 size; (void)size;
  int depth; (void)depth;
  ::google::protobuf::uint32 tag;
  ::google::protobuf::internal::ParseFunc parser_till_end; (void)parser_till_end;
  auto ptr = begin;
  while (ptr < end) {
    ptr = ::google::protobuf::io::Parse32(ptr, &tag);
    GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
    switch (tag >> 3) {
      // string message = 1;
      case 1: {
        if (static_cast<::google::protobuf::uint8>(tag) != 10) goto handle_unusual;
        ptr = ::google::protobuf::io::ReadSize(ptr, &size);
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        ctx->extra_parse_data().SetFieldName("ShadowVM.TestReply.message");
        object = msg->mutable_message();
        if (size > end - ptr + ::google::protobuf::internal::ParseContext::kSlopBytes) {
          parser_till_end = ::google::protobuf::internal::GreedyStringParserUTF8;
          goto string_till_end;
        }
        GOOGLE_PROTOBUF_PARSER_ASSERT(::google::protobuf::internal::StringCheckUTF8(ptr, size, ctx));
        ::google::protobuf::internal::InlineGreedyStringParser(object, ptr, size, ctx);
        ptr += size;
        break;
      }
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->EndGroup(tag);
          return ptr;
        }
        auto res = UnknownFieldParse(tag, {_InternalParse, msg},
          ptr, end, msg->_internal_metadata_.mutable_unknown_fields(), ctx);
        ptr = res.first;
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr != nullptr);
        if (res.second) return ptr;
      }
    }  // switch
  }  // while
  return ptr;
string_till_end:
  static_cast<::std::string*>(object)->clear();
  static_cast<::std::string*>(object)->reserve(size);
  goto len_delim_till_end;
len_delim_till_end:
  return ctx->StoreAndTailCall(ptr, end, {_InternalParse, msg},
                               {parser_till_end, object}, size);
}
#else  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
bool TestReply::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!PROTOBUF_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:ShadowVM.TestReply)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // string message = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (10 & 0xFF)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_message()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->message().data(), static_cast<int>(this->message().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "ShadowVM.TestReply.message"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:ShadowVM.TestReply)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:ShadowVM.TestReply)
  return false;
#undef DO_
}
#endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER

void TestReply::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:ShadowVM.TestReply)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string message = 1;
  if (this->message().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->message().data(), static_cast<int>(this->message().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "ShadowVM.TestReply.message");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->message(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:ShadowVM.TestReply)
}

::google::protobuf::uint8* TestReply::InternalSerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:ShadowVM.TestReply)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string message = 1;
  if (this->message().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->message().data(), static_cast<int>(this->message().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "ShadowVM.TestReply.message");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->message(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:ShadowVM.TestReply)
  return target;
}

size_t TestReply::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:ShadowVM.TestReply)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string message = 1;
  if (this->message().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->message());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void TestReply::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:ShadowVM.TestReply)
  GOOGLE_DCHECK_NE(&from, this);
  const TestReply* source =
      ::google::protobuf::DynamicCastToGenerated<TestReply>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:ShadowVM.TestReply)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:ShadowVM.TestReply)
    MergeFrom(*source);
  }
}

void TestReply::MergeFrom(const TestReply& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:ShadowVM.TestReply)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.message().size() > 0) {

    message_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.message_);
  }
}

void TestReply::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:ShadowVM.TestReply)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void TestReply::CopyFrom(const TestReply& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:ShadowVM.TestReply)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool TestReply::IsInitialized() const {
  return true;
}

void TestReply::Swap(TestReply* other) {
  if (other == this) return;
  InternalSwap(other);
}
void TestReply::InternalSwap(TestReply* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
  message_.Swap(&other->message_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
}

::google::protobuf::Metadata TestReply::GetMetadata() const {
  ::google::protobuf::internal::AssignDescriptors(&::assign_descriptors_table_svm_2eproto);
  return ::file_level_metadata_svm_2eproto[kIndexInFileMessages];
}


// ===================================================================

void BulkInfo::InitAsDefaultInstance() {
}
class BulkInfo::HasBitSetters {
 public:
};

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int BulkInfo::kStotypeFieldNumber;
const int BulkInfo::kCountFieldNumber;
const int BulkInfo::kSizeFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

BulkInfo::BulkInfo()
  : ::google::protobuf::Message(), _internal_metadata_(nullptr) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:ShadowVM.BulkInfo)
}
BulkInfo::BulkInfo(const BulkInfo& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(nullptr) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::memcpy(&count_, &from.count_,
    static_cast<size_t>(reinterpret_cast<char*>(&stotype_) -
    reinterpret_cast<char*>(&count_)) + sizeof(stotype_));
  // @@protoc_insertion_point(copy_constructor:ShadowVM.BulkInfo)
}

void BulkInfo::SharedCtor() {
  ::memset(&count_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&stotype_) -
      reinterpret_cast<char*>(&count_)) + sizeof(stotype_));
}

BulkInfo::~BulkInfo() {
  // @@protoc_insertion_point(destructor:ShadowVM.BulkInfo)
  SharedDtor();
}

void BulkInfo::SharedDtor() {
}

void BulkInfo::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const BulkInfo& BulkInfo::default_instance() {
  ::google::protobuf::internal::InitSCC(&::scc_info_BulkInfo_svm_2eproto.base);
  return *internal_default_instance();
}


void BulkInfo::Clear() {
// @@protoc_insertion_point(message_clear_start:ShadowVM.BulkInfo)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  ::memset(&count_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&stotype_) -
      reinterpret_cast<char*>(&count_)) + sizeof(stotype_));
  _internal_metadata_.Clear();
}

#if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
const char* BulkInfo::_InternalParse(const char* begin, const char* end, void* object,
                  ::google::protobuf::internal::ParseContext* ctx) {
  auto msg = static_cast<BulkInfo*>(object);
  ::google::protobuf::int32 size; (void)size;
  int depth; (void)depth;
  ::google::protobuf::uint32 tag;
  ::google::protobuf::internal::ParseFunc parser_till_end; (void)parser_till_end;
  auto ptr = begin;
  while (ptr < end) {
    ptr = ::google::protobuf::io::Parse32(ptr, &tag);
    GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
    switch (tag >> 3) {
      // .ShadowVM.StoType stotype = 1;
      case 1: {
        if (static_cast<::google::protobuf::uint8>(tag) != 8) goto handle_unusual;
        ::google::protobuf::uint64 val = ::google::protobuf::internal::ReadVarint(&ptr);
        msg->set_stotype(static_cast<::ShadowVM::StoType>(val));
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        break;
      }
      // int64 count = 2;
      case 2: {
        if (static_cast<::google::protobuf::uint8>(tag) != 16) goto handle_unusual;
        msg->set_count(::google::protobuf::internal::ReadVarint(&ptr));
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        break;
      }
      // int64 size = 3;
      case 3: {
        if (static_cast<::google::protobuf::uint8>(tag) != 24) goto handle_unusual;
        msg->set_size(::google::protobuf::internal::ReadVarint(&ptr));
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        break;
      }
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->EndGroup(tag);
          return ptr;
        }
        auto res = UnknownFieldParse(tag, {_InternalParse, msg},
          ptr, end, msg->_internal_metadata_.mutable_unknown_fields(), ctx);
        ptr = res.first;
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr != nullptr);
        if (res.second) return ptr;
      }
    }  // switch
  }  // while
  return ptr;
}
#else  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
bool BulkInfo::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!PROTOBUF_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:ShadowVM.BulkInfo)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // .ShadowVM.StoType stotype = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (8 & 0xFF)) {
          int value = 0;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          set_stotype(static_cast< ::ShadowVM::StoType >(value));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // int64 count = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (16 & 0xFF)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 input, &count_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // int64 size = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (24 & 0xFF)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 input, &size_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:ShadowVM.BulkInfo)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:ShadowVM.BulkInfo)
  return false;
#undef DO_
}
#endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER

void BulkInfo::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:ShadowVM.BulkInfo)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .ShadowVM.StoType stotype = 1;
  if (this->stotype() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      1, this->stotype(), output);
  }

  // int64 count = 2;
  if (this->count() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64(2, this->count(), output);
  }

  // int64 size = 3;
  if (this->size() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64(3, this->size(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:ShadowVM.BulkInfo)
}

::google::protobuf::uint8* BulkInfo::InternalSerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:ShadowVM.BulkInfo)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .ShadowVM.StoType stotype = 1;
  if (this->stotype() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
      1, this->stotype(), target);
  }

  // int64 count = 2;
  if (this->count() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt64ToArray(2, this->count(), target);
  }

  // int64 size = 3;
  if (this->size() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt64ToArray(3, this->size(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:ShadowVM.BulkInfo)
  return target;
}

size_t BulkInfo::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:ShadowVM.BulkInfo)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // int64 count = 2;
  if (this->count() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int64Size(
        this->count());
  }

  // int64 size = 3;
  if (this->size() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int64Size(
        this->size());
  }

  // .ShadowVM.StoType stotype = 1;
  if (this->stotype() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::EnumSize(this->stotype());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void BulkInfo::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:ShadowVM.BulkInfo)
  GOOGLE_DCHECK_NE(&from, this);
  const BulkInfo* source =
      ::google::protobuf::DynamicCastToGenerated<BulkInfo>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:ShadowVM.BulkInfo)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:ShadowVM.BulkInfo)
    MergeFrom(*source);
  }
}

void BulkInfo::MergeFrom(const BulkInfo& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:ShadowVM.BulkInfo)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.count() != 0) {
    set_count(from.count());
  }
  if (from.size() != 0) {
    set_size(from.size());
  }
  if (from.stotype() != 0) {
    set_stotype(from.stotype());
  }
}

void BulkInfo::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:ShadowVM.BulkInfo)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void BulkInfo::CopyFrom(const BulkInfo& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:ShadowVM.BulkInfo)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool BulkInfo::IsInitialized() const {
  return true;
}

void BulkInfo::Swap(BulkInfo* other) {
  if (other == this) return;
  InternalSwap(other);
}
void BulkInfo::InternalSwap(BulkInfo* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(count_, other->count_);
  swap(size_, other->size_);
  swap(stotype_, other->stotype_);
}

::google::protobuf::Metadata BulkInfo::GetMetadata() const {
  ::google::protobuf::internal::AssignDescriptors(&::assign_descriptors_table_svm_2eproto);
  return ::file_level_metadata_svm_2eproto[kIndexInFileMessages];
}


// ===================================================================

void ColumnInfo::InitAsDefaultInstance() {
}
class ColumnInfo::HasBitSetters {
 public:
};

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int ColumnInfo::kIdFieldNumber;
const int ColumnInfo::kTypeFieldNumber;
const int ColumnInfo::kIsnullFieldNumber;
const int ColumnInfo::kDimFieldNumber;
const int ColumnInfo::kValSizeFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

ColumnInfo::ColumnInfo()
  : ::google::protobuf::Message(), _internal_metadata_(nullptr) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:ShadowVM.ColumnInfo)
}
ColumnInfo::ColumnInfo(const ColumnInfo& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(nullptr),
      dim_(from.dim_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  id_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.id().size() > 0) {
    id_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.id_);
  }
  ::memcpy(&type_, &from.type_,
    static_cast<size_t>(reinterpret_cast<char*>(&val_size_) -
    reinterpret_cast<char*>(&type_)) + sizeof(val_size_));
  // @@protoc_insertion_point(copy_constructor:ShadowVM.ColumnInfo)
}

void ColumnInfo::SharedCtor() {
  ::google::protobuf::internal::InitSCC(
      &scc_info_ColumnInfo_svm_2eproto.base);
  id_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&type_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&val_size_) -
      reinterpret_cast<char*>(&type_)) + sizeof(val_size_));
}

ColumnInfo::~ColumnInfo() {
  // @@protoc_insertion_point(destructor:ShadowVM.ColumnInfo)
  SharedDtor();
}

void ColumnInfo::SharedDtor() {
  id_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void ColumnInfo::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ColumnInfo& ColumnInfo::default_instance() {
  ::google::protobuf::internal::InitSCC(&::scc_info_ColumnInfo_svm_2eproto.base);
  return *internal_default_instance();
}


void ColumnInfo::Clear() {
// @@protoc_insertion_point(message_clear_start:ShadowVM.ColumnInfo)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  dim_.Clear();
  id_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&type_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&val_size_) -
      reinterpret_cast<char*>(&type_)) + sizeof(val_size_));
  _internal_metadata_.Clear();
}

#if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
const char* ColumnInfo::_InternalParse(const char* begin, const char* end, void* object,
                  ::google::protobuf::internal::ParseContext* ctx) {
  auto msg = static_cast<ColumnInfo*>(object);
  ::google::protobuf::int32 size; (void)size;
  int depth; (void)depth;
  ::google::protobuf::uint32 tag;
  ::google::protobuf::internal::ParseFunc parser_till_end; (void)parser_till_end;
  auto ptr = begin;
  while (ptr < end) {
    ptr = ::google::protobuf::io::Parse32(ptr, &tag);
    GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
    switch (tag >> 3) {
      // string id = 1;
      case 1: {
        if (static_cast<::google::protobuf::uint8>(tag) != 10) goto handle_unusual;
        ptr = ::google::protobuf::io::ReadSize(ptr, &size);
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        ctx->extra_parse_data().SetFieldName("ShadowVM.ColumnInfo.id");
        object = msg->mutable_id();
        if (size > end - ptr + ::google::protobuf::internal::ParseContext::kSlopBytes) {
          parser_till_end = ::google::protobuf::internal::GreedyStringParserUTF8;
          goto string_till_end;
        }
        GOOGLE_PROTOBUF_PARSER_ASSERT(::google::protobuf::internal::StringCheckUTF8(ptr, size, ctx));
        ::google::protobuf::internal::InlineGreedyStringParser(object, ptr, size, ctx);
        ptr += size;
        break;
      }
      // .ShadowVM.ValType type = 2;
      case 2: {
        if (static_cast<::google::protobuf::uint8>(tag) != 16) goto handle_unusual;
        ::google::protobuf::uint64 val = ::google::protobuf::internal::ReadVarint(&ptr);
        msg->set_type(static_cast<::ShadowVM::ValType>(val));
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        break;
      }
      // bool isnull = 3;
      case 3: {
        if (static_cast<::google::protobuf::uint8>(tag) != 24) goto handle_unusual;
        msg->set_isnull(::google::protobuf::internal::ReadVarint(&ptr));
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        break;
      }
      // repeated int32 dim = 4;
      case 4: {
        if (static_cast<::google::protobuf::uint8>(tag) == 34) {
          ptr = ::google::protobuf::io::ReadSize(ptr, &size);
          GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
          parser_till_end = ::google::protobuf::internal::PackedInt32Parser;
          object = msg->mutable_dim();
          if (size > end - ptr) goto len_delim_till_end;
          auto newend = ptr + size;
          if (size) ptr = parser_till_end(ptr, newend, object, ctx);
          GOOGLE_PROTOBUF_PARSER_ASSERT(ptr == newend);
          break;
        } else if (static_cast<::google::protobuf::uint8>(tag) != 32) goto handle_unusual;
        do {
          msg->add_dim(::google::protobuf::internal::ReadVarint(&ptr));
          GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
          if (ptr >= end) break;
        } while ((::google::protobuf::io::UnalignedLoad<::google::protobuf::uint64>(ptr) & 255) == 32 && (ptr += 1));
        break;
      }
      // int64 val_size = 5;
      case 5: {
        if (static_cast<::google::protobuf::uint8>(tag) != 40) goto handle_unusual;
        msg->set_val_size(::google::protobuf::internal::ReadVarint(&ptr));
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        break;
      }
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->EndGroup(tag);
          return ptr;
        }
        auto res = UnknownFieldParse(tag, {_InternalParse, msg},
          ptr, end, msg->_internal_metadata_.mutable_unknown_fields(), ctx);
        ptr = res.first;
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr != nullptr);
        if (res.second) return ptr;
      }
    }  // switch
  }  // while
  return ptr;
string_till_end:
  static_cast<::std::string*>(object)->clear();
  static_cast<::std::string*>(object)->reserve(size);
  goto len_delim_till_end;
len_delim_till_end:
  return ctx->StoreAndTailCall(ptr, end, {_InternalParse, msg},
                               {parser_till_end, object}, size);
}
#else  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
bool ColumnInfo::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!PROTOBUF_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:ShadowVM.ColumnInfo)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // string id = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (10 & 0xFF)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_id()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->id().data(), static_cast<int>(this->id().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "ShadowVM.ColumnInfo.id"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .ShadowVM.ValType type = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (16 & 0xFF)) {
          int value = 0;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          set_type(static_cast< ::ShadowVM::ValType >(value));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // bool isnull = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (24 & 0xFF)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &isnull_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated int32 dim = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (34 & 0xFF)) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPackedPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, this->mutable_dim())));
        } else if (static_cast< ::google::protobuf::uint8>(tag) == (32 & 0xFF)) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadRepeatedPrimitiveNoInline<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 1, 34u, input, this->mutable_dim())));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // int64 val_size = 5;
      case 5: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (40 & 0xFF)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 input, &val_size_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:ShadowVM.ColumnInfo)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:ShadowVM.ColumnInfo)
  return false;
#undef DO_
}
#endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER

void ColumnInfo::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:ShadowVM.ColumnInfo)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string id = 1;
  if (this->id().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->id().data(), static_cast<int>(this->id().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "ShadowVM.ColumnInfo.id");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->id(), output);
  }

  // .ShadowVM.ValType type = 2;
  if (this->type() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      2, this->type(), output);
  }

  // bool isnull = 3;
  if (this->isnull() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(3, this->isnull(), output);
  }

  // repeated int32 dim = 4;
  if (this->dim_size() > 0) {
    ::google::protobuf::internal::WireFormatLite::WriteTag(4, ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED, output);
    output->WriteVarint32(_dim_cached_byte_size_.load(
        std::memory_order_relaxed));
  }
  for (int i = 0, n = this->dim_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32NoTag(
      this->dim(i), output);
  }

  // int64 val_size = 5;
  if (this->val_size() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64(5, this->val_size(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:ShadowVM.ColumnInfo)
}

::google::protobuf::uint8* ColumnInfo::InternalSerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:ShadowVM.ColumnInfo)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string id = 1;
  if (this->id().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->id().data(), static_cast<int>(this->id().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "ShadowVM.ColumnInfo.id");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->id(), target);
  }

  // .ShadowVM.ValType type = 2;
  if (this->type() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
      2, this->type(), target);
  }

  // bool isnull = 3;
  if (this->isnull() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(3, this->isnull(), target);
  }

  // repeated int32 dim = 4;
  if (this->dim_size() > 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteTagToArray(
      4,
      ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED,
      target);
    target = ::google::protobuf::io::CodedOutputStream::WriteVarint32ToArray(
        _dim_cached_byte_size_.load(std::memory_order_relaxed),
         target);
    target = ::google::protobuf::internal::WireFormatLite::
      WriteInt32NoTagToArray(this->dim_, target);
  }

  // int64 val_size = 5;
  if (this->val_size() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt64ToArray(5, this->val_size(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:ShadowVM.ColumnInfo)
  return target;
}

size_t ColumnInfo::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:ShadowVM.ColumnInfo)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // repeated int32 dim = 4;
  {
    size_t data_size = ::google::protobuf::internal::WireFormatLite::
      Int32Size(this->dim_);
    if (data_size > 0) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
            static_cast<::google::protobuf::int32>(data_size));
    }
    int cached_size = ::google::protobuf::internal::ToCachedSize(data_size);
    _dim_cached_byte_size_.store(cached_size,
                                    std::memory_order_relaxed);
    total_size += data_size;
  }

  // string id = 1;
  if (this->id().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->id());
  }

  // .ShadowVM.ValType type = 2;
  if (this->type() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::EnumSize(this->type());
  }

  // bool isnull = 3;
  if (this->isnull() != 0) {
    total_size += 1 + 1;
  }

  // int64 val_size = 5;
  if (this->val_size() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int64Size(
        this->val_size());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void ColumnInfo::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:ShadowVM.ColumnInfo)
  GOOGLE_DCHECK_NE(&from, this);
  const ColumnInfo* source =
      ::google::protobuf::DynamicCastToGenerated<ColumnInfo>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:ShadowVM.ColumnInfo)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:ShadowVM.ColumnInfo)
    MergeFrom(*source);
  }
}

void ColumnInfo::MergeFrom(const ColumnInfo& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:ShadowVM.ColumnInfo)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  dim_.MergeFrom(from.dim_);
  if (from.id().size() > 0) {

    id_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.id_);
  }
  if (from.type() != 0) {
    set_type(from.type());
  }
  if (from.isnull() != 0) {
    set_isnull(from.isnull());
  }
  if (from.val_size() != 0) {
    set_val_size(from.val_size());
  }
}

void ColumnInfo::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:ShadowVM.ColumnInfo)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ColumnInfo::CopyFrom(const ColumnInfo& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:ShadowVM.ColumnInfo)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ColumnInfo::IsInitialized() const {
  return true;
}

void ColumnInfo::Swap(ColumnInfo* other) {
  if (other == this) return;
  InternalSwap(other);
}
void ColumnInfo::InternalSwap(ColumnInfo* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
  dim_.InternalSwap(&other->dim_);
  id_.Swap(&other->id_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  swap(type_, other->type_);
  swap(isnull_, other->isnull_);
  swap(val_size_, other->val_size_);
}

::google::protobuf::Metadata ColumnInfo::GetMetadata() const {
  ::google::protobuf::internal::AssignDescriptors(&::assign_descriptors_table_svm_2eproto);
  return ::file_level_metadata_svm_2eproto[kIndexInFileMessages];
}


// ===================================================================

void ObjectInfo::InitAsDefaultInstance() {
}
class ObjectInfo::HasBitSetters {
 public:
};

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int ObjectInfo::kIdFieldNumber;
const int ObjectInfo::kHostFieldNumber;
const int ObjectInfo::kColumnListFieldNumber;
const int ObjectInfo::kStorageFieldNumber;
const int ObjectInfo::kPathFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

ObjectInfo::ObjectInfo()
  : ::google::protobuf::Message(), _internal_metadata_(nullptr) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:ShadowVM.ObjectInfo)
}
ObjectInfo::ObjectInfo(const ObjectInfo& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(nullptr),
      column_list_(from.column_list_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  id_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.id().size() > 0) {
    id_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.id_);
  }
  host_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.host().size() > 0) {
    host_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.host_);
  }
  path_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.path().size() > 0) {
    path_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.path_);
  }
  storage_ = from.storage_;
  // @@protoc_insertion_point(copy_constructor:ShadowVM.ObjectInfo)
}

void ObjectInfo::SharedCtor() {
  ::google::protobuf::internal::InitSCC(
      &scc_info_ObjectInfo_svm_2eproto.base);
  id_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  host_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  path_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  storage_ = 0;
}

ObjectInfo::~ObjectInfo() {
  // @@protoc_insertion_point(destructor:ShadowVM.ObjectInfo)
  SharedDtor();
}

void ObjectInfo::SharedDtor() {
  id_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  host_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  path_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void ObjectInfo::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ObjectInfo& ObjectInfo::default_instance() {
  ::google::protobuf::internal::InitSCC(&::scc_info_ObjectInfo_svm_2eproto.base);
  return *internal_default_instance();
}


void ObjectInfo::Clear() {
// @@protoc_insertion_point(message_clear_start:ShadowVM.ObjectInfo)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  column_list_.Clear();
  id_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  host_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  path_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  storage_ = 0;
  _internal_metadata_.Clear();
}

#if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
const char* ObjectInfo::_InternalParse(const char* begin, const char* end, void* object,
                  ::google::protobuf::internal::ParseContext* ctx) {
  auto msg = static_cast<ObjectInfo*>(object);
  ::google::protobuf::int32 size; (void)size;
  int depth; (void)depth;
  ::google::protobuf::uint32 tag;
  ::google::protobuf::internal::ParseFunc parser_till_end; (void)parser_till_end;
  auto ptr = begin;
  while (ptr < end) {
    ptr = ::google::protobuf::io::Parse32(ptr, &tag);
    GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
    switch (tag >> 3) {
      // string id = 1;
      case 1: {
        if (static_cast<::google::protobuf::uint8>(tag) != 10) goto handle_unusual;
        ptr = ::google::protobuf::io::ReadSize(ptr, &size);
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        ctx->extra_parse_data().SetFieldName("ShadowVM.ObjectInfo.id");
        object = msg->mutable_id();
        if (size > end - ptr + ::google::protobuf::internal::ParseContext::kSlopBytes) {
          parser_till_end = ::google::protobuf::internal::GreedyStringParserUTF8;
          goto string_till_end;
        }
        GOOGLE_PROTOBUF_PARSER_ASSERT(::google::protobuf::internal::StringCheckUTF8(ptr, size, ctx));
        ::google::protobuf::internal::InlineGreedyStringParser(object, ptr, size, ctx);
        ptr += size;
        break;
      }
      // string host = 2;
      case 2: {
        if (static_cast<::google::protobuf::uint8>(tag) != 18) goto handle_unusual;
        ptr = ::google::protobuf::io::ReadSize(ptr, &size);
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        ctx->extra_parse_data().SetFieldName("ShadowVM.ObjectInfo.host");
        object = msg->mutable_host();
        if (size > end - ptr + ::google::protobuf::internal::ParseContext::kSlopBytes) {
          parser_till_end = ::google::protobuf::internal::GreedyStringParserUTF8;
          goto string_till_end;
        }
        GOOGLE_PROTOBUF_PARSER_ASSERT(::google::protobuf::internal::StringCheckUTF8(ptr, size, ctx));
        ::google::protobuf::internal::InlineGreedyStringParser(object, ptr, size, ctx);
        ptr += size;
        break;
      }
      // repeated .ShadowVM.ColumnInfo column_list = 3;
      case 3: {
        if (static_cast<::google::protobuf::uint8>(tag) != 26) goto handle_unusual;
        do {
          ptr = ::google::protobuf::io::ReadSize(ptr, &size);
          GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
          parser_till_end = ::ShadowVM::ColumnInfo::_InternalParse;
          object = msg->add_column_list();
          if (size > end - ptr) goto len_delim_till_end;
          ptr += size;
          GOOGLE_PROTOBUF_PARSER_ASSERT(ctx->ParseExactRange(
              {parser_till_end, object}, ptr - size, ptr));
          if (ptr >= end) break;
        } while ((::google::protobuf::io::UnalignedLoad<::google::protobuf::uint64>(ptr) & 255) == 26 && (ptr += 1));
        break;
      }
      // .ShadowVM.StoType storage = 4;
      case 4: {
        if (static_cast<::google::protobuf::uint8>(tag) != 32) goto handle_unusual;
        ::google::protobuf::uint64 val = ::google::protobuf::internal::ReadVarint(&ptr);
        msg->set_storage(static_cast<::ShadowVM::StoType>(val));
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        break;
      }
      // string path = 5;
      case 5: {
        if (static_cast<::google::protobuf::uint8>(tag) != 42) goto handle_unusual;
        ptr = ::google::protobuf::io::ReadSize(ptr, &size);
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        ctx->extra_parse_data().SetFieldName("ShadowVM.ObjectInfo.path");
        object = msg->mutable_path();
        if (size > end - ptr + ::google::protobuf::internal::ParseContext::kSlopBytes) {
          parser_till_end = ::google::protobuf::internal::GreedyStringParserUTF8;
          goto string_till_end;
        }
        GOOGLE_PROTOBUF_PARSER_ASSERT(::google::protobuf::internal::StringCheckUTF8(ptr, size, ctx));
        ::google::protobuf::internal::InlineGreedyStringParser(object, ptr, size, ctx);
        ptr += size;
        break;
      }
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->EndGroup(tag);
          return ptr;
        }
        auto res = UnknownFieldParse(tag, {_InternalParse, msg},
          ptr, end, msg->_internal_metadata_.mutable_unknown_fields(), ctx);
        ptr = res.first;
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr != nullptr);
        if (res.second) return ptr;
      }
    }  // switch
  }  // while
  return ptr;
string_till_end:
  static_cast<::std::string*>(object)->clear();
  static_cast<::std::string*>(object)->reserve(size);
  goto len_delim_till_end;
len_delim_till_end:
  return ctx->StoreAndTailCall(ptr, end, {_InternalParse, msg},
                               {parser_till_end, object}, size);
}
#else  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
bool ObjectInfo::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!PROTOBUF_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:ShadowVM.ObjectInfo)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // string id = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (10 & 0xFF)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_id()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->id().data(), static_cast<int>(this->id().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "ShadowVM.ObjectInfo.id"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string host = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (18 & 0xFF)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_host()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->host().data(), static_cast<int>(this->host().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "ShadowVM.ObjectInfo.host"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated .ShadowVM.ColumnInfo column_list = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (26 & 0xFF)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
                input, add_column_list()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .ShadowVM.StoType storage = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (32 & 0xFF)) {
          int value = 0;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          set_storage(static_cast< ::ShadowVM::StoType >(value));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string path = 5;
      case 5: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (42 & 0xFF)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_path()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->path().data(), static_cast<int>(this->path().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "ShadowVM.ObjectInfo.path"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:ShadowVM.ObjectInfo)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:ShadowVM.ObjectInfo)
  return false;
#undef DO_
}
#endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER

void ObjectInfo::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:ShadowVM.ObjectInfo)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string id = 1;
  if (this->id().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->id().data(), static_cast<int>(this->id().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "ShadowVM.ObjectInfo.id");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->id(), output);
  }

  // string host = 2;
  if (this->host().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->host().data(), static_cast<int>(this->host().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "ShadowVM.ObjectInfo.host");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->host(), output);
  }

  // repeated .ShadowVM.ColumnInfo column_list = 3;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->column_list_size()); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      3,
      this->column_list(static_cast<int>(i)),
      output);
  }

  // .ShadowVM.StoType storage = 4;
  if (this->storage() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      4, this->storage(), output);
  }

  // string path = 5;
  if (this->path().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->path().data(), static_cast<int>(this->path().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "ShadowVM.ObjectInfo.path");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      5, this->path(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:ShadowVM.ObjectInfo)
}

::google::protobuf::uint8* ObjectInfo::InternalSerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:ShadowVM.ObjectInfo)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string id = 1;
  if (this->id().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->id().data(), static_cast<int>(this->id().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "ShadowVM.ObjectInfo.id");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->id(), target);
  }

  // string host = 2;
  if (this->host().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->host().data(), static_cast<int>(this->host().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "ShadowVM.ObjectInfo.host");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->host(), target);
  }

  // repeated .ShadowVM.ColumnInfo column_list = 3;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->column_list_size()); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        3, this->column_list(static_cast<int>(i)), target);
  }

  // .ShadowVM.StoType storage = 4;
  if (this->storage() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
      4, this->storage(), target);
  }

  // string path = 5;
  if (this->path().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->path().data(), static_cast<int>(this->path().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "ShadowVM.ObjectInfo.path");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        5, this->path(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:ShadowVM.ObjectInfo)
  return target;
}

size_t ObjectInfo::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:ShadowVM.ObjectInfo)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // repeated .ShadowVM.ColumnInfo column_list = 3;
  {
    unsigned int count = static_cast<unsigned int>(this->column_list_size());
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          this->column_list(static_cast<int>(i)));
    }
  }

  // string id = 1;
  if (this->id().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->id());
  }

  // string host = 2;
  if (this->host().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->host());
  }

  // string path = 5;
  if (this->path().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->path());
  }

  // .ShadowVM.StoType storage = 4;
  if (this->storage() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::EnumSize(this->storage());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void ObjectInfo::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:ShadowVM.ObjectInfo)
  GOOGLE_DCHECK_NE(&from, this);
  const ObjectInfo* source =
      ::google::protobuf::DynamicCastToGenerated<ObjectInfo>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:ShadowVM.ObjectInfo)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:ShadowVM.ObjectInfo)
    MergeFrom(*source);
  }
}

void ObjectInfo::MergeFrom(const ObjectInfo& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:ShadowVM.ObjectInfo)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  column_list_.MergeFrom(from.column_list_);
  if (from.id().size() > 0) {

    id_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.id_);
  }
  if (from.host().size() > 0) {

    host_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.host_);
  }
  if (from.path().size() > 0) {

    path_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.path_);
  }
  if (from.storage() != 0) {
    set_storage(from.storage());
  }
}

void ObjectInfo::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:ShadowVM.ObjectInfo)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ObjectInfo::CopyFrom(const ObjectInfo& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:ShadowVM.ObjectInfo)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ObjectInfo::IsInitialized() const {
  return true;
}

void ObjectInfo::Swap(ObjectInfo* other) {
  if (other == this) return;
  InternalSwap(other);
}
void ObjectInfo::InternalSwap(ObjectInfo* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
  CastToBase(&column_list_)->InternalSwap(CastToBase(&other->column_list_));
  id_.Swap(&other->id_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  host_.Swap(&other->host_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  path_.Swap(&other->path_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  swap(storage_, other->storage_);
}

::google::protobuf::Metadata ObjectInfo::GetMetadata() const {
  ::google::protobuf::internal::AssignDescriptors(&::assign_descriptors_table_svm_2eproto);
  return ::file_level_metadata_svm_2eproto[kIndexInFileMessages];
}


// ===================================================================

void DependencyInfo::InitAsDefaultInstance() {
  ::ShadowVM::_DependencyInfo_default_instance_._instance.get_mutable()->pre_object_ = const_cast< ::ShadowVM::ObjectInfo*>(
      ::ShadowVM::ObjectInfo::internal_default_instance());
}
class DependencyInfo::HasBitSetters {
 public:
  static const ::ShadowVM::ObjectInfo& pre_object(const DependencyInfo* msg);
};

const ::ShadowVM::ObjectInfo&
DependencyInfo::HasBitSetters::pre_object(const DependencyInfo* msg) {
  return *msg->pre_object_;
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int DependencyInfo::kPreObjectFieldNumber;
const int DependencyInfo::kTypeFieldNumber;
const int DependencyInfo::kShardIdFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

DependencyInfo::DependencyInfo()
  : ::google::protobuf::Message(), _internal_metadata_(nullptr) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:ShadowVM.DependencyInfo)
}
DependencyInfo::DependencyInfo(const DependencyInfo& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(nullptr) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from.has_pre_object()) {
    pre_object_ = new ::ShadowVM::ObjectInfo(*from.pre_object_);
  } else {
    pre_object_ = nullptr;
  }
  ::memcpy(&type_, &from.type_,
    static_cast<size_t>(reinterpret_cast<char*>(&shard_id_) -
    reinterpret_cast<char*>(&type_)) + sizeof(shard_id_));
  // @@protoc_insertion_point(copy_constructor:ShadowVM.DependencyInfo)
}

void DependencyInfo::SharedCtor() {
  ::google::protobuf::internal::InitSCC(
      &scc_info_DependencyInfo_svm_2eproto.base);
  ::memset(&pre_object_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&shard_id_) -
      reinterpret_cast<char*>(&pre_object_)) + sizeof(shard_id_));
}

DependencyInfo::~DependencyInfo() {
  // @@protoc_insertion_point(destructor:ShadowVM.DependencyInfo)
  SharedDtor();
}

void DependencyInfo::SharedDtor() {
  if (this != internal_default_instance()) delete pre_object_;
}

void DependencyInfo::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const DependencyInfo& DependencyInfo::default_instance() {
  ::google::protobuf::internal::InitSCC(&::scc_info_DependencyInfo_svm_2eproto.base);
  return *internal_default_instance();
}


void DependencyInfo::Clear() {
// @@protoc_insertion_point(message_clear_start:ShadowVM.DependencyInfo)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  if (GetArenaNoVirtual() == nullptr && pre_object_ != nullptr) {
    delete pre_object_;
  }
  pre_object_ = nullptr;
  ::memset(&type_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&shard_id_) -
      reinterpret_cast<char*>(&type_)) + sizeof(shard_id_));
  _internal_metadata_.Clear();
}

#if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
const char* DependencyInfo::_InternalParse(const char* begin, const char* end, void* object,
                  ::google::protobuf::internal::ParseContext* ctx) {
  auto msg = static_cast<DependencyInfo*>(object);
  ::google::protobuf::int32 size; (void)size;
  int depth; (void)depth;
  ::google::protobuf::uint32 tag;
  ::google::protobuf::internal::ParseFunc parser_till_end; (void)parser_till_end;
  auto ptr = begin;
  while (ptr < end) {
    ptr = ::google::protobuf::io::Parse32(ptr, &tag);
    GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
    switch (tag >> 3) {
      // .ShadowVM.ObjectInfo pre_object = 1;
      case 1: {
        if (static_cast<::google::protobuf::uint8>(tag) != 10) goto handle_unusual;
        ptr = ::google::protobuf::io::ReadSize(ptr, &size);
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        parser_till_end = ::ShadowVM::ObjectInfo::_InternalParse;
        object = msg->mutable_pre_object();
        if (size > end - ptr) goto len_delim_till_end;
        ptr += size;
        GOOGLE_PROTOBUF_PARSER_ASSERT(ctx->ParseExactRange(
            {parser_till_end, object}, ptr - size, ptr));
        break;
      }
      // .ShadowVM.DependencyInfo.Type type = 2;
      case 2: {
        if (static_cast<::google::protobuf::uint8>(tag) != 16) goto handle_unusual;
        ::google::protobuf::uint64 val = ::google::protobuf::internal::ReadVarint(&ptr);
        msg->set_type(static_cast<::ShadowVM::DependencyInfo_Type>(val));
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        break;
      }
      // int32 shard_id = 3;
      case 3: {
        if (static_cast<::google::protobuf::uint8>(tag) != 24) goto handle_unusual;
        msg->set_shard_id(::google::protobuf::internal::ReadVarint(&ptr));
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        break;
      }
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->EndGroup(tag);
          return ptr;
        }
        auto res = UnknownFieldParse(tag, {_InternalParse, msg},
          ptr, end, msg->_internal_metadata_.mutable_unknown_fields(), ctx);
        ptr = res.first;
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr != nullptr);
        if (res.second) return ptr;
      }
    }  // switch
  }  // while
  return ptr;
len_delim_till_end:
  return ctx->StoreAndTailCall(ptr, end, {_InternalParse, msg},
                               {parser_till_end, object}, size);
}
#else  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
bool DependencyInfo::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!PROTOBUF_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:ShadowVM.DependencyInfo)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // .ShadowVM.ObjectInfo pre_object = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (10 & 0xFF)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_pre_object()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .ShadowVM.DependencyInfo.Type type = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (16 & 0xFF)) {
          int value = 0;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          set_type(static_cast< ::ShadowVM::DependencyInfo_Type >(value));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // int32 shard_id = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (24 & 0xFF)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &shard_id_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:ShadowVM.DependencyInfo)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:ShadowVM.DependencyInfo)
  return false;
#undef DO_
}
#endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER

void DependencyInfo::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:ShadowVM.DependencyInfo)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .ShadowVM.ObjectInfo pre_object = 1;
  if (this->has_pre_object()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, HasBitSetters::pre_object(this), output);
  }

  // .ShadowVM.DependencyInfo.Type type = 2;
  if (this->type() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      2, this->type(), output);
  }

  // int32 shard_id = 3;
  if (this->shard_id() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(3, this->shard_id(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:ShadowVM.DependencyInfo)
}

::google::protobuf::uint8* DependencyInfo::InternalSerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:ShadowVM.DependencyInfo)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .ShadowVM.ObjectInfo pre_object = 1;
  if (this->has_pre_object()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        1, HasBitSetters::pre_object(this), target);
  }

  // .ShadowVM.DependencyInfo.Type type = 2;
  if (this->type() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
      2, this->type(), target);
  }

  // int32 shard_id = 3;
  if (this->shard_id() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(3, this->shard_id(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:ShadowVM.DependencyInfo)
  return target;
}

size_t DependencyInfo::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:ShadowVM.DependencyInfo)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // .ShadowVM.ObjectInfo pre_object = 1;
  if (this->has_pre_object()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *pre_object_);
  }

  // .ShadowVM.DependencyInfo.Type type = 2;
  if (this->type() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::EnumSize(this->type());
  }

  // int32 shard_id = 3;
  if (this->shard_id() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->shard_id());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void DependencyInfo::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:ShadowVM.DependencyInfo)
  GOOGLE_DCHECK_NE(&from, this);
  const DependencyInfo* source =
      ::google::protobuf::DynamicCastToGenerated<DependencyInfo>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:ShadowVM.DependencyInfo)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:ShadowVM.DependencyInfo)
    MergeFrom(*source);
  }
}

void DependencyInfo::MergeFrom(const DependencyInfo& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:ShadowVM.DependencyInfo)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.has_pre_object()) {
    mutable_pre_object()->::ShadowVM::ObjectInfo::MergeFrom(from.pre_object());
  }
  if (from.type() != 0) {
    set_type(from.type());
  }
  if (from.shard_id() != 0) {
    set_shard_id(from.shard_id());
  }
}

void DependencyInfo::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:ShadowVM.DependencyInfo)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void DependencyInfo::CopyFrom(const DependencyInfo& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:ShadowVM.DependencyInfo)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool DependencyInfo::IsInitialized() const {
  return true;
}

void DependencyInfo::Swap(DependencyInfo* other) {
  if (other == this) return;
  InternalSwap(other);
}
void DependencyInfo::InternalSwap(DependencyInfo* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(pre_object_, other->pre_object_);
  swap(type_, other->type_);
  swap(shard_id_, other->shard_id_);
}

::google::protobuf::Metadata DependencyInfo::GetMetadata() const {
  ::google::protobuf::internal::AssignDescriptors(&::assign_descriptors_table_svm_2eproto);
  return ::file_level_metadata_svm_2eproto[kIndexInFileMessages];
}


// ===================================================================

OperatorInfo_ArgsEntry_DoNotUse::OperatorInfo_ArgsEntry_DoNotUse() {}
OperatorInfo_ArgsEntry_DoNotUse::OperatorInfo_ArgsEntry_DoNotUse(::google::protobuf::Arena* arena)
    : SuperType(arena) {}
void OperatorInfo_ArgsEntry_DoNotUse::MergeFrom(const OperatorInfo_ArgsEntry_DoNotUse& other) {
  MergeFromInternal(other);
}
::google::protobuf::Metadata OperatorInfo_ArgsEntry_DoNotUse::GetMetadata() const {
  ::google::protobuf::internal::AssignDescriptors(&::assign_descriptors_table_svm_2eproto);
  return ::file_level_metadata_svm_2eproto[8];
}
void OperatorInfo_ArgsEntry_DoNotUse::MergeFrom(
    const ::google::protobuf::Message& other) {
  ::google::protobuf::Message::MergeFrom(other);
}

#if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
bool OperatorInfo_ArgsEntry_DoNotUse::_ParseMap(const char* begin, const char* end, void* object, ::google::protobuf::internal::ParseContext* ctx) {
  using MF = ::google::protobuf::internal::MapField<
      OperatorInfo_ArgsEntry_DoNotUse, EntryKeyType, EntryValueType,
      kEntryKeyFieldType, kEntryValueFieldType,
      kEntryDefaultEnumValue>;
  auto mf = static_cast<MF*>(object);
  Parser<MF, ::google::protobuf::Map<EntryKeyType, EntryValueType>> parser(mf);
#define DO_(x) if (!(x)) return false
  DO_(parser.ParseMap(begin, end));
  DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
    parser.key().data(), static_cast<int>(parser.key().length()),
    ::google::protobuf::internal::WireFormatLite::PARSE,
    "ShadowVM.OperatorInfo.ArgsEntry.key"));
  DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
    parser.value().data(), static_cast<int>(parser.value().length()),
    ::google::protobuf::internal::WireFormatLite::PARSE,
    "ShadowVM.OperatorInfo.ArgsEntry.value"));
#undef DO_
  return true;
}
#endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER


// ===================================================================

void OperatorInfo::InitAsDefaultInstance() {
  ::ShadowVM::_OperatorInfo_default_instance_._instance.get_mutable()->output_ = const_cast< ::ShadowVM::ObjectInfo*>(
      ::ShadowVM::ObjectInfo::internal_default_instance());
}
class OperatorInfo::HasBitSetters {
 public:
  static const ::ShadowVM::ObjectInfo& output(const OperatorInfo* msg);
};

const ::ShadowVM::ObjectInfo&
OperatorInfo::HasBitSetters::output(const OperatorInfo* msg) {
  return *msg->output_;
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int OperatorInfo::kIdFieldNumber;
const int OperatorInfo::kTypeFieldNumber;
const int OperatorInfo::kInputFieldNumber;
const int OperatorInfo::kArgsFieldNumber;
const int OperatorInfo::kOutputFieldNumber;
const int OperatorInfo::kPerfFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

OperatorInfo::OperatorInfo()
  : ::google::protobuf::Message(), _internal_metadata_(nullptr) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:ShadowVM.OperatorInfo)
}
OperatorInfo::OperatorInfo(const OperatorInfo& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(nullptr),
      input_(from.input_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  args_.MergeFrom(from.args_);
  id_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.id().size() > 0) {
    id_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.id_);
  }
  if (from.has_output()) {
    output_ = new ::ShadowVM::ObjectInfo(*from.output_);
  } else {
    output_ = nullptr;
  }
  ::memcpy(&type_, &from.type_,
    static_cast<size_t>(reinterpret_cast<char*>(&perf_) -
    reinterpret_cast<char*>(&type_)) + sizeof(perf_));
  // @@protoc_insertion_point(copy_constructor:ShadowVM.OperatorInfo)
}

void OperatorInfo::SharedCtor() {
  ::google::protobuf::internal::InitSCC(
      &scc_info_OperatorInfo_svm_2eproto.base);
  id_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&output_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&perf_) -
      reinterpret_cast<char*>(&output_)) + sizeof(perf_));
}

OperatorInfo::~OperatorInfo() {
  // @@protoc_insertion_point(destructor:ShadowVM.OperatorInfo)
  SharedDtor();
}

void OperatorInfo::SharedDtor() {
  id_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (this != internal_default_instance()) delete output_;
}

void OperatorInfo::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const OperatorInfo& OperatorInfo::default_instance() {
  ::google::protobuf::internal::InitSCC(&::scc_info_OperatorInfo_svm_2eproto.base);
  return *internal_default_instance();
}


void OperatorInfo::Clear() {
// @@protoc_insertion_point(message_clear_start:ShadowVM.OperatorInfo)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  input_.Clear();
  args_.Clear();
  id_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (GetArenaNoVirtual() == nullptr && output_ != nullptr) {
    delete output_;
  }
  output_ = nullptr;
  ::memset(&type_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&perf_) -
      reinterpret_cast<char*>(&type_)) + sizeof(perf_));
  _internal_metadata_.Clear();
}

#if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
const char* OperatorInfo::_InternalParse(const char* begin, const char* end, void* object,
                  ::google::protobuf::internal::ParseContext* ctx) {
  auto msg = static_cast<OperatorInfo*>(object);
  ::google::protobuf::int32 size; (void)size;
  int depth; (void)depth;
  ::google::protobuf::uint32 tag;
  ::google::protobuf::internal::ParseFunc parser_till_end; (void)parser_till_end;
  auto ptr = begin;
  while (ptr < end) {
    ptr = ::google::protobuf::io::Parse32(ptr, &tag);
    GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
    switch (tag >> 3) {
      // string id = 1;
      case 1: {
        if (static_cast<::google::protobuf::uint8>(tag) != 10) goto handle_unusual;
        ptr = ::google::protobuf::io::ReadSize(ptr, &size);
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        ctx->extra_parse_data().SetFieldName("ShadowVM.OperatorInfo.id");
        object = msg->mutable_id();
        if (size > end - ptr + ::google::protobuf::internal::ParseContext::kSlopBytes) {
          parser_till_end = ::google::protobuf::internal::GreedyStringParserUTF8;
          goto string_till_end;
        }
        GOOGLE_PROTOBUF_PARSER_ASSERT(::google::protobuf::internal::StringCheckUTF8(ptr, size, ctx));
        ::google::protobuf::internal::InlineGreedyStringParser(object, ptr, size, ctx);
        ptr += size;
        break;
      }
      // .ShadowVM.OperatorInfo.Type type = 2;
      case 2: {
        if (static_cast<::google::protobuf::uint8>(tag) != 16) goto handle_unusual;
        ::google::protobuf::uint64 val = ::google::protobuf::internal::ReadVarint(&ptr);
        msg->set_type(static_cast<::ShadowVM::OperatorInfo_Type>(val));
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        break;
      }
      // repeated .ShadowVM.DependencyInfo input = 3;
      case 3: {
        if (static_cast<::google::protobuf::uint8>(tag) != 26) goto handle_unusual;
        do {
          ptr = ::google::protobuf::io::ReadSize(ptr, &size);
          GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
          parser_till_end = ::ShadowVM::DependencyInfo::_InternalParse;
          object = msg->add_input();
          if (size > end - ptr) goto len_delim_till_end;
          ptr += size;
          GOOGLE_PROTOBUF_PARSER_ASSERT(ctx->ParseExactRange(
              {parser_till_end, object}, ptr - size, ptr));
          if (ptr >= end) break;
        } while ((::google::protobuf::io::UnalignedLoad<::google::protobuf::uint64>(ptr) & 255) == 26 && (ptr += 1));
        break;
      }
      // map<string, string> args = 4;
      case 4: {
        if (static_cast<::google::protobuf::uint8>(tag) != 34) goto handle_unusual;
        do {
          ptr = ::google::protobuf::io::ReadSize(ptr, &size);
          GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
          parser_till_end = ::google::protobuf::internal::SlowMapEntryParser;
          auto parse_map = ::ShadowVM::OperatorInfo_ArgsEntry_DoNotUse::_ParseMap;
          ctx->extra_parse_data().payload.clear();
          ctx->extra_parse_data().parse_map = parse_map;
          object = &msg->args_;
          if (size > end - ptr) goto len_delim_till_end;
          auto newend = ptr + size;
          GOOGLE_PROTOBUF_PARSER_ASSERT(parse_map(ptr, newend, object, ctx));
          ptr = newend;
          if (ptr >= end) break;
        } while ((::google::protobuf::io::UnalignedLoad<::google::protobuf::uint64>(ptr) & 255) == 34 && (ptr += 1));
        break;
      }
      // .ShadowVM.ObjectInfo output = 5;
      case 5: {
        if (static_cast<::google::protobuf::uint8>(tag) != 42) goto handle_unusual;
        ptr = ::google::protobuf::io::ReadSize(ptr, &size);
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        parser_till_end = ::ShadowVM::ObjectInfo::_InternalParse;
        object = msg->mutable_output();
        if (size > end - ptr) goto len_delim_till_end;
        ptr += size;
        GOOGLE_PROTOBUF_PARSER_ASSERT(ctx->ParseExactRange(
            {parser_till_end, object}, ptr - size, ptr));
        break;
      }
      // .ShadowVM.OperatorInfo.Preference perf = 6;
      case 6: {
        if (static_cast<::google::protobuf::uint8>(tag) != 48) goto handle_unusual;
        ::google::protobuf::uint64 val = ::google::protobuf::internal::ReadVarint(&ptr);
        msg->set_perf(static_cast<::ShadowVM::OperatorInfo_Preference>(val));
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        break;
      }
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->EndGroup(tag);
          return ptr;
        }
        auto res = UnknownFieldParse(tag, {_InternalParse, msg},
          ptr, end, msg->_internal_metadata_.mutable_unknown_fields(), ctx);
        ptr = res.first;
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr != nullptr);
        if (res.second) return ptr;
      }
    }  // switch
  }  // while
  return ptr;
string_till_end:
  static_cast<::std::string*>(object)->clear();
  static_cast<::std::string*>(object)->reserve(size);
  goto len_delim_till_end;
len_delim_till_end:
  return ctx->StoreAndTailCall(ptr, end, {_InternalParse, msg},
                               {parser_till_end, object}, size);
}
#else  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
bool OperatorInfo::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!PROTOBUF_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:ShadowVM.OperatorInfo)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // string id = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (10 & 0xFF)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_id()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->id().data(), static_cast<int>(this->id().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "ShadowVM.OperatorInfo.id"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .ShadowVM.OperatorInfo.Type type = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (16 & 0xFF)) {
          int value = 0;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          set_type(static_cast< ::ShadowVM::OperatorInfo_Type >(value));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated .ShadowVM.DependencyInfo input = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (26 & 0xFF)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
                input, add_input()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // map<string, string> args = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (34 & 0xFF)) {
          OperatorInfo_ArgsEntry_DoNotUse::Parser< ::google::protobuf::internal::MapField<
              OperatorInfo_ArgsEntry_DoNotUse,
              ::std::string, ::std::string,
              ::google::protobuf::internal::WireFormatLite::TYPE_STRING,
              ::google::protobuf::internal::WireFormatLite::TYPE_STRING,
              0 >,
            ::google::protobuf::Map< ::std::string, ::std::string > > parser(&args_);
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
              input, &parser));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            parser.key().data(), static_cast<int>(parser.key().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "ShadowVM.OperatorInfo.ArgsEntry.key"));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            parser.value().data(), static_cast<int>(parser.value().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "ShadowVM.OperatorInfo.ArgsEntry.value"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .ShadowVM.ObjectInfo output = 5;
      case 5: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (42 & 0xFF)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_output()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .ShadowVM.OperatorInfo.Preference perf = 6;
      case 6: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (48 & 0xFF)) {
          int value = 0;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          set_perf(static_cast< ::ShadowVM::OperatorInfo_Preference >(value));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:ShadowVM.OperatorInfo)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:ShadowVM.OperatorInfo)
  return false;
#undef DO_
}
#endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER

void OperatorInfo::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:ShadowVM.OperatorInfo)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string id = 1;
  if (this->id().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->id().data(), static_cast<int>(this->id().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "ShadowVM.OperatorInfo.id");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->id(), output);
  }

  // .ShadowVM.OperatorInfo.Type type = 2;
  if (this->type() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      2, this->type(), output);
  }

  // repeated .ShadowVM.DependencyInfo input = 3;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->input_size()); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      3,
      this->input(static_cast<int>(i)),
      output);
  }

  // map<string, string> args = 4;
  if (!this->args().empty()) {
    typedef ::google::protobuf::Map< ::std::string, ::std::string >::const_pointer
        ConstPtr;
    typedef ConstPtr SortItem;
    typedef ::google::protobuf::internal::CompareByDerefFirst<SortItem> Less;
    struct Utf8Check {
      static void Check(ConstPtr p) {
        ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
          p->first.data(), static_cast<int>(p->first.length()),
          ::google::protobuf::internal::WireFormatLite::SERIALIZE,
          "ShadowVM.OperatorInfo.ArgsEntry.key");
        ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
          p->second.data(), static_cast<int>(p->second.length()),
          ::google::protobuf::internal::WireFormatLite::SERIALIZE,
          "ShadowVM.OperatorInfo.ArgsEntry.value");
      }
    };

    if (output->IsSerializationDeterministic() &&
        this->args().size() > 1) {
      ::std::unique_ptr<SortItem[]> items(
          new SortItem[this->args().size()]);
      typedef ::google::protobuf::Map< ::std::string, ::std::string >::size_type size_type;
      size_type n = 0;
      for (::google::protobuf::Map< ::std::string, ::std::string >::const_iterator
          it = this->args().begin();
          it != this->args().end(); ++it, ++n) {
        items[static_cast<ptrdiff_t>(n)] = SortItem(&*it);
      }
      ::std::sort(&items[0], &items[static_cast<ptrdiff_t>(n)], Less());
      ::std::unique_ptr<OperatorInfo_ArgsEntry_DoNotUse> entry;
      for (size_type i = 0; i < n; i++) {
        entry.reset(args_.NewEntryWrapper(items[static_cast<ptrdiff_t>(i)]->first, items[static_cast<ptrdiff_t>(i)]->second));
        ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(4, *entry, output);
        Utf8Check::Check(&(*items[static_cast<ptrdiff_t>(i)]));
      }
    } else {
      ::std::unique_ptr<OperatorInfo_ArgsEntry_DoNotUse> entry;
      for (::google::protobuf::Map< ::std::string, ::std::string >::const_iterator
          it = this->args().begin();
          it != this->args().end(); ++it) {
        entry.reset(args_.NewEntryWrapper(it->first, it->second));
        ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(4, *entry, output);
        Utf8Check::Check(&(*it));
      }
    }
  }

  // .ShadowVM.ObjectInfo output = 5;
  if (this->has_output()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      5, HasBitSetters::output(this), output);
  }

  // .ShadowVM.OperatorInfo.Preference perf = 6;
  if (this->perf() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      6, this->perf(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:ShadowVM.OperatorInfo)
}

::google::protobuf::uint8* OperatorInfo::InternalSerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:ShadowVM.OperatorInfo)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string id = 1;
  if (this->id().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->id().data(), static_cast<int>(this->id().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "ShadowVM.OperatorInfo.id");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->id(), target);
  }

  // .ShadowVM.OperatorInfo.Type type = 2;
  if (this->type() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
      2, this->type(), target);
  }

  // repeated .ShadowVM.DependencyInfo input = 3;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->input_size()); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        3, this->input(static_cast<int>(i)), target);
  }

  // map<string, string> args = 4;
  if (!this->args().empty()) {
    typedef ::google::protobuf::Map< ::std::string, ::std::string >::const_pointer
        ConstPtr;
    typedef ConstPtr SortItem;
    typedef ::google::protobuf::internal::CompareByDerefFirst<SortItem> Less;
    struct Utf8Check {
      static void Check(ConstPtr p) {
        ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
          p->first.data(), static_cast<int>(p->first.length()),
          ::google::protobuf::internal::WireFormatLite::SERIALIZE,
          "ShadowVM.OperatorInfo.ArgsEntry.key");
        ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
          p->second.data(), static_cast<int>(p->second.length()),
          ::google::protobuf::internal::WireFormatLite::SERIALIZE,
          "ShadowVM.OperatorInfo.ArgsEntry.value");
      }
    };

    if (false &&
        this->args().size() > 1) {
      ::std::unique_ptr<SortItem[]> items(
          new SortItem[this->args().size()]);
      typedef ::google::protobuf::Map< ::std::string, ::std::string >::size_type size_type;
      size_type n = 0;
      for (::google::protobuf::Map< ::std::string, ::std::string >::const_iterator
          it = this->args().begin();
          it != this->args().end(); ++it, ++n) {
        items[static_cast<ptrdiff_t>(n)] = SortItem(&*it);
      }
      ::std::sort(&items[0], &items[static_cast<ptrdiff_t>(n)], Less());
      ::std::unique_ptr<OperatorInfo_ArgsEntry_DoNotUse> entry;
      for (size_type i = 0; i < n; i++) {
        entry.reset(args_.NewEntryWrapper(items[static_cast<ptrdiff_t>(i)]->first, items[static_cast<ptrdiff_t>(i)]->second));
        target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessageNoVirtualToArray(4, *entry, target);
        Utf8Check::Check(&(*items[static_cast<ptrdiff_t>(i)]));
      }
    } else {
      ::std::unique_ptr<OperatorInfo_ArgsEntry_DoNotUse> entry;
      for (::google::protobuf::Map< ::std::string, ::std::string >::const_iterator
          it = this->args().begin();
          it != this->args().end(); ++it) {
        entry.reset(args_.NewEntryWrapper(it->first, it->second));
        target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessageNoVirtualToArray(4, *entry, target);
        Utf8Check::Check(&(*it));
      }
    }
  }

  // .ShadowVM.ObjectInfo output = 5;
  if (this->has_output()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        5, HasBitSetters::output(this), target);
  }

  // .ShadowVM.OperatorInfo.Preference perf = 6;
  if (this->perf() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
      6, this->perf(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:ShadowVM.OperatorInfo)
  return target;
}

size_t OperatorInfo::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:ShadowVM.OperatorInfo)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // repeated .ShadowVM.DependencyInfo input = 3;
  {
    unsigned int count = static_cast<unsigned int>(this->input_size());
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          this->input(static_cast<int>(i)));
    }
  }

  // map<string, string> args = 4;
  total_size += 1 *
      ::google::protobuf::internal::FromIntSize(this->args_size());
  {
    ::std::unique_ptr<OperatorInfo_ArgsEntry_DoNotUse> entry;
    for (::google::protobuf::Map< ::std::string, ::std::string >::const_iterator
        it = this->args().begin();
        it != this->args().end(); ++it) {
      entry.reset(args_.NewEntryWrapper(it->first, it->second));
      total_size += ::google::protobuf::internal::WireFormatLite::
          MessageSizeNoVirtual(*entry);
    }
  }

  // string id = 1;
  if (this->id().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->id());
  }

  // .ShadowVM.ObjectInfo output = 5;
  if (this->has_output()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *output_);
  }

  // .ShadowVM.OperatorInfo.Type type = 2;
  if (this->type() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::EnumSize(this->type());
  }

  // .ShadowVM.OperatorInfo.Preference perf = 6;
  if (this->perf() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::EnumSize(this->perf());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void OperatorInfo::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:ShadowVM.OperatorInfo)
  GOOGLE_DCHECK_NE(&from, this);
  const OperatorInfo* source =
      ::google::protobuf::DynamicCastToGenerated<OperatorInfo>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:ShadowVM.OperatorInfo)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:ShadowVM.OperatorInfo)
    MergeFrom(*source);
  }
}

void OperatorInfo::MergeFrom(const OperatorInfo& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:ShadowVM.OperatorInfo)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  input_.MergeFrom(from.input_);
  args_.MergeFrom(from.args_);
  if (from.id().size() > 0) {

    id_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.id_);
  }
  if (from.has_output()) {
    mutable_output()->::ShadowVM::ObjectInfo::MergeFrom(from.output());
  }
  if (from.type() != 0) {
    set_type(from.type());
  }
  if (from.perf() != 0) {
    set_perf(from.perf());
  }
}

void OperatorInfo::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:ShadowVM.OperatorInfo)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void OperatorInfo::CopyFrom(const OperatorInfo& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:ShadowVM.OperatorInfo)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool OperatorInfo::IsInitialized() const {
  return true;
}

void OperatorInfo::Swap(OperatorInfo* other) {
  if (other == this) return;
  InternalSwap(other);
}
void OperatorInfo::InternalSwap(OperatorInfo* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
  CastToBase(&input_)->InternalSwap(CastToBase(&other->input_));
  args_.Swap(&other->args_);
  id_.Swap(&other->id_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  swap(output_, other->output_);
  swap(type_, other->type_);
  swap(perf_, other->perf_);
}

::google::protobuf::Metadata OperatorInfo::GetMetadata() const {
  ::google::protobuf::internal::AssignDescriptors(&::assign_descriptors_table_svm_2eproto);
  return ::file_level_metadata_svm_2eproto[kIndexInFileMessages];
}


// ===================================================================

void UDFInfo::InitAsDefaultInstance() {
}
class UDFInfo::HasBitSetters {
 public:
};

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int UDFInfo::kNameFieldNumber;
const int UDFInfo::kParaListFieldNumber;
const int UDFInfo::kReturnFieldNumber;
const int UDFInfo::kExpressionFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

UDFInfo::UDFInfo()
  : ::google::protobuf::Message(), _internal_metadata_(nullptr) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:ShadowVM.UDFInfo)
}
UDFInfo::UDFInfo(const UDFInfo& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(nullptr),
      para_list_(from.para_list_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.name().size() > 0) {
    name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.name_);
  }
  expression_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.expression().size() > 0) {
    expression_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.expression_);
  }
  return__ = from.return__;
  // @@protoc_insertion_point(copy_constructor:ShadowVM.UDFInfo)
}

void UDFInfo::SharedCtor() {
  ::google::protobuf::internal::InitSCC(
      &scc_info_UDFInfo_svm_2eproto.base);
  name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  expression_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  return__ = 0;
}

UDFInfo::~UDFInfo() {
  // @@protoc_insertion_point(destructor:ShadowVM.UDFInfo)
  SharedDtor();
}

void UDFInfo::SharedDtor() {
  name_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  expression_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void UDFInfo::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const UDFInfo& UDFInfo::default_instance() {
  ::google::protobuf::internal::InitSCC(&::scc_info_UDFInfo_svm_2eproto.base);
  return *internal_default_instance();
}


void UDFInfo::Clear() {
// @@protoc_insertion_point(message_clear_start:ShadowVM.UDFInfo)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  para_list_.Clear();
  name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  expression_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  return__ = 0;
  _internal_metadata_.Clear();
}

#if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
const char* UDFInfo::_InternalParse(const char* begin, const char* end, void* object,
                  ::google::protobuf::internal::ParseContext* ctx) {
  auto msg = static_cast<UDFInfo*>(object);
  ::google::protobuf::int32 size; (void)size;
  int depth; (void)depth;
  ::google::protobuf::uint32 tag;
  ::google::protobuf::internal::ParseFunc parser_till_end; (void)parser_till_end;
  auto ptr = begin;
  while (ptr < end) {
    ptr = ::google::protobuf::io::Parse32(ptr, &tag);
    GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
    switch (tag >> 3) {
      // string name = 1;
      case 1: {
        if (static_cast<::google::protobuf::uint8>(tag) != 10) goto handle_unusual;
        ptr = ::google::protobuf::io::ReadSize(ptr, &size);
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        ctx->extra_parse_data().SetFieldName("ShadowVM.UDFInfo.name");
        object = msg->mutable_name();
        if (size > end - ptr + ::google::protobuf::internal::ParseContext::kSlopBytes) {
          parser_till_end = ::google::protobuf::internal::GreedyStringParserUTF8;
          goto string_till_end;
        }
        GOOGLE_PROTOBUF_PARSER_ASSERT(::google::protobuf::internal::StringCheckUTF8(ptr, size, ctx));
        ::google::protobuf::internal::InlineGreedyStringParser(object, ptr, size, ctx);
        ptr += size;
        break;
      }
      // repeated .ShadowVM.ValType para_list = 2;
      case 2: {
        if (static_cast<::google::protobuf::uint8>(tag) == 18) {
          ptr = ::google::protobuf::io::ReadSize(ptr, &size);
          GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
          parser_till_end = ::google::protobuf::internal::PackedEnumParser;
          object = msg->mutable_para_list();
          if (size > end - ptr) goto len_delim_till_end;
          auto newend = ptr + size;
          if (size) ptr = parser_till_end(ptr, newend, object, ctx);
          GOOGLE_PROTOBUF_PARSER_ASSERT(ptr == newend);
          break;
        } else if (static_cast<::google::protobuf::uint8>(tag) != 16) goto handle_unusual;
        do {
          ::google::protobuf::uint64 val = ::google::protobuf::internal::ReadVarint(&ptr);
          msg->add_para_list(static_cast<::ShadowVM::ValType>(val));
          GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
          if (ptr >= end) break;
        } while ((::google::protobuf::io::UnalignedLoad<::google::protobuf::uint64>(ptr) & 255) == 16 && (ptr += 1));
        break;
      }
      // .ShadowVM.ValType return = 3;
      case 3: {
        if (static_cast<::google::protobuf::uint8>(tag) != 24) goto handle_unusual;
        ::google::protobuf::uint64 val = ::google::protobuf::internal::ReadVarint(&ptr);
        msg->set_return_(static_cast<::ShadowVM::ValType>(val));
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        break;
      }
      // string expression = 4;
      case 4: {
        if (static_cast<::google::protobuf::uint8>(tag) != 34) goto handle_unusual;
        ptr = ::google::protobuf::io::ReadSize(ptr, &size);
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        ctx->extra_parse_data().SetFieldName("ShadowVM.UDFInfo.expression");
        object = msg->mutable_expression();
        if (size > end - ptr + ::google::protobuf::internal::ParseContext::kSlopBytes) {
          parser_till_end = ::google::protobuf::internal::GreedyStringParserUTF8;
          goto string_till_end;
        }
        GOOGLE_PROTOBUF_PARSER_ASSERT(::google::protobuf::internal::StringCheckUTF8(ptr, size, ctx));
        ::google::protobuf::internal::InlineGreedyStringParser(object, ptr, size, ctx);
        ptr += size;
        break;
      }
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->EndGroup(tag);
          return ptr;
        }
        auto res = UnknownFieldParse(tag, {_InternalParse, msg},
          ptr, end, msg->_internal_metadata_.mutable_unknown_fields(), ctx);
        ptr = res.first;
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr != nullptr);
        if (res.second) return ptr;
      }
    }  // switch
  }  // while
  return ptr;
string_till_end:
  static_cast<::std::string*>(object)->clear();
  static_cast<::std::string*>(object)->reserve(size);
  goto len_delim_till_end;
len_delim_till_end:
  return ctx->StoreAndTailCall(ptr, end, {_InternalParse, msg},
                               {parser_till_end, object}, size);
}
#else  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
bool UDFInfo::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!PROTOBUF_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:ShadowVM.UDFInfo)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // string name = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (10 & 0xFF)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_name()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->name().data(), static_cast<int>(this->name().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "ShadowVM.UDFInfo.name"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated .ShadowVM.ValType para_list = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (18 & 0xFF)) {
          ::google::protobuf::uint32 length;
          DO_(input->ReadVarint32(&length));
          ::google::protobuf::io::CodedInputStream::Limit limit = input->PushLimit(static_cast<int>(length));
          while (input->BytesUntilLimit() > 0) {
            int value = 0;
            DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
            add_para_list(static_cast< ::ShadowVM::ValType >(value));
          }
          input->PopLimit(limit);
        } else if (static_cast< ::google::protobuf::uint8>(tag) == (16 & 0xFF)) {
          int value = 0;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          add_para_list(static_cast< ::ShadowVM::ValType >(value));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .ShadowVM.ValType return = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (24 & 0xFF)) {
          int value = 0;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          set_return_(static_cast< ::ShadowVM::ValType >(value));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string expression = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (34 & 0xFF)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_expression()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->expression().data(), static_cast<int>(this->expression().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "ShadowVM.UDFInfo.expression"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:ShadowVM.UDFInfo)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:ShadowVM.UDFInfo)
  return false;
#undef DO_
}
#endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER

void UDFInfo::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:ShadowVM.UDFInfo)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string name = 1;
  if (this->name().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->name().data(), static_cast<int>(this->name().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "ShadowVM.UDFInfo.name");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->name(), output);
  }

  // repeated .ShadowVM.ValType para_list = 2;
  if (this->para_list_size() > 0) {
    ::google::protobuf::internal::WireFormatLite::WriteTag(
      2,
      ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED,
      output);
    output->WriteVarint32(_para_list_cached_byte_size_.load(
        std::memory_order_relaxed));
  }
  for (int i = 0, n = this->para_list_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteEnumNoTag(
      this->para_list(i), output);
  }

  // .ShadowVM.ValType return = 3;
  if (this->return_() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      3, this->return_(), output);
  }

  // string expression = 4;
  if (this->expression().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->expression().data(), static_cast<int>(this->expression().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "ShadowVM.UDFInfo.expression");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      4, this->expression(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:ShadowVM.UDFInfo)
}

::google::protobuf::uint8* UDFInfo::InternalSerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:ShadowVM.UDFInfo)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string name = 1;
  if (this->name().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->name().data(), static_cast<int>(this->name().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "ShadowVM.UDFInfo.name");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->name(), target);
  }

  // repeated .ShadowVM.ValType para_list = 2;
  if (this->para_list_size() > 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteTagToArray(
      2,
      ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED,
      target);
    target = ::google::protobuf::io::CodedOutputStream::WriteVarint32ToArray(      _para_list_cached_byte_size_.load(std::memory_order_relaxed),
        target);
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumNoTagToArray(
      this->para_list_, target);
  }

  // .ShadowVM.ValType return = 3;
  if (this->return_() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
      3, this->return_(), target);
  }

  // string expression = 4;
  if (this->expression().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->expression().data(), static_cast<int>(this->expression().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "ShadowVM.UDFInfo.expression");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        4, this->expression(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:ShadowVM.UDFInfo)
  return target;
}

size_t UDFInfo::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:ShadowVM.UDFInfo)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // repeated .ShadowVM.ValType para_list = 2;
  {
    size_t data_size = 0;
    unsigned int count = static_cast<unsigned int>(this->para_list_size());for (unsigned int i = 0; i < count; i++) {
      data_size += ::google::protobuf::internal::WireFormatLite::EnumSize(
        this->para_list(static_cast<int>(i)));
    }
    if (data_size > 0) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
            static_cast<::google::protobuf::int32>(data_size));
    }
    int cached_size = ::google::protobuf::internal::ToCachedSize(data_size);
    _para_list_cached_byte_size_.store(cached_size,
                                    std::memory_order_relaxed);
    total_size += data_size;
  }

  // string name = 1;
  if (this->name().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->name());
  }

  // string expression = 4;
  if (this->expression().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->expression());
  }

  // .ShadowVM.ValType return = 3;
  if (this->return_() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::EnumSize(this->return_());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void UDFInfo::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:ShadowVM.UDFInfo)
  GOOGLE_DCHECK_NE(&from, this);
  const UDFInfo* source =
      ::google::protobuf::DynamicCastToGenerated<UDFInfo>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:ShadowVM.UDFInfo)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:ShadowVM.UDFInfo)
    MergeFrom(*source);
  }
}

void UDFInfo::MergeFrom(const UDFInfo& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:ShadowVM.UDFInfo)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  para_list_.MergeFrom(from.para_list_);
  if (from.name().size() > 0) {

    name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.name_);
  }
  if (from.expression().size() > 0) {

    expression_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.expression_);
  }
  if (from.return_() != 0) {
    set_return_(from.return_());
  }
}

void UDFInfo::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:ShadowVM.UDFInfo)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void UDFInfo::CopyFrom(const UDFInfo& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:ShadowVM.UDFInfo)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool UDFInfo::IsInitialized() const {
  return true;
}

void UDFInfo::Swap(UDFInfo* other) {
  if (other == this) return;
  InternalSwap(other);
}
void UDFInfo::InternalSwap(UDFInfo* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
  para_list_.InternalSwap(&other->para_list_);
  name_.Swap(&other->name_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  expression_.Swap(&other->expression_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  swap(return__, other->return__);
}

::google::protobuf::Metadata UDFInfo::GetMetadata() const {
  ::google::protobuf::internal::AssignDescriptors(&::assign_descriptors_table_svm_2eproto);
  return ::file_level_metadata_svm_2eproto[kIndexInFileMessages];
}


// ===================================================================

void PipelineInfo::InitAsDefaultInstance() {
}
class PipelineInfo::HasBitSetters {
 public:
};

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int PipelineInfo::kIdFieldNumber;
const int PipelineInfo::kWorkflowFieldNumber;
const int PipelineInfo::kPrePipelineIdFieldNumber;
const int PipelineInfo::kCodegenFieldNumber;
const int PipelineInfo::kDebugFieldNumber;
const int PipelineInfo::kIsGPUFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

PipelineInfo::PipelineInfo()
  : ::google::protobuf::Message(), _internal_metadata_(nullptr) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:ShadowVM.PipelineInfo)
}
PipelineInfo::PipelineInfo(const PipelineInfo& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(nullptr),
      workflow_(from.workflow_),
      pre_pipeline_id_(from.pre_pipeline_id_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  id_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.id().size() > 0) {
    id_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.id_);
  }
  ::memcpy(&codegen_, &from.codegen_,
    static_cast<size_t>(reinterpret_cast<char*>(&isgpu_) -
    reinterpret_cast<char*>(&codegen_)) + sizeof(isgpu_));
  // @@protoc_insertion_point(copy_constructor:ShadowVM.PipelineInfo)
}

void PipelineInfo::SharedCtor() {
  ::google::protobuf::internal::InitSCC(
      &scc_info_PipelineInfo_svm_2eproto.base);
  id_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&codegen_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&isgpu_) -
      reinterpret_cast<char*>(&codegen_)) + sizeof(isgpu_));
}

PipelineInfo::~PipelineInfo() {
  // @@protoc_insertion_point(destructor:ShadowVM.PipelineInfo)
  SharedDtor();
}

void PipelineInfo::SharedDtor() {
  id_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void PipelineInfo::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const PipelineInfo& PipelineInfo::default_instance() {
  ::google::protobuf::internal::InitSCC(&::scc_info_PipelineInfo_svm_2eproto.base);
  return *internal_default_instance();
}


void PipelineInfo::Clear() {
// @@protoc_insertion_point(message_clear_start:ShadowVM.PipelineInfo)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  workflow_.Clear();
  pre_pipeline_id_.Clear();
  id_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&codegen_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&isgpu_) -
      reinterpret_cast<char*>(&codegen_)) + sizeof(isgpu_));
  _internal_metadata_.Clear();
}

#if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
const char* PipelineInfo::_InternalParse(const char* begin, const char* end, void* object,
                  ::google::protobuf::internal::ParseContext* ctx) {
  auto msg = static_cast<PipelineInfo*>(object);
  ::google::protobuf::int32 size; (void)size;
  int depth; (void)depth;
  ::google::protobuf::uint32 tag;
  ::google::protobuf::internal::ParseFunc parser_till_end; (void)parser_till_end;
  auto ptr = begin;
  while (ptr < end) {
    ptr = ::google::protobuf::io::Parse32(ptr, &tag);
    GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
    switch (tag >> 3) {
      // string id = 1;
      case 1: {
        if (static_cast<::google::protobuf::uint8>(tag) != 10) goto handle_unusual;
        ptr = ::google::protobuf::io::ReadSize(ptr, &size);
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        ctx->extra_parse_data().SetFieldName("ShadowVM.PipelineInfo.id");
        object = msg->mutable_id();
        if (size > end - ptr + ::google::protobuf::internal::ParseContext::kSlopBytes) {
          parser_till_end = ::google::protobuf::internal::GreedyStringParserUTF8;
          goto string_till_end;
        }
        GOOGLE_PROTOBUF_PARSER_ASSERT(::google::protobuf::internal::StringCheckUTF8(ptr, size, ctx));
        ::google::protobuf::internal::InlineGreedyStringParser(object, ptr, size, ctx);
        ptr += size;
        break;
      }
      // repeated .ShadowVM.OperatorInfo workflow = 2;
      case 2: {
        if (static_cast<::google::protobuf::uint8>(tag) != 18) goto handle_unusual;
        do {
          ptr = ::google::protobuf::io::ReadSize(ptr, &size);
          GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
          parser_till_end = ::ShadowVM::OperatorInfo::_InternalParse;
          object = msg->add_workflow();
          if (size > end - ptr) goto len_delim_till_end;
          ptr += size;
          GOOGLE_PROTOBUF_PARSER_ASSERT(ctx->ParseExactRange(
              {parser_till_end, object}, ptr - size, ptr));
          if (ptr >= end) break;
        } while ((::google::protobuf::io::UnalignedLoad<::google::protobuf::uint64>(ptr) & 255) == 18 && (ptr += 1));
        break;
      }
      // repeated string pre_pipeline_id = 3;
      case 3: {
        if (static_cast<::google::protobuf::uint8>(tag) != 26) goto handle_unusual;
        do {
          ptr = ::google::protobuf::io::ReadSize(ptr, &size);
          GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
          ctx->extra_parse_data().SetFieldName("ShadowVM.PipelineInfo.pre_pipeline_id");
          object = msg->add_pre_pipeline_id();
          if (size > end - ptr + ::google::protobuf::internal::ParseContext::kSlopBytes) {
            parser_till_end = ::google::protobuf::internal::GreedyStringParserUTF8;
            goto string_till_end;
          }
          GOOGLE_PROTOBUF_PARSER_ASSERT(::google::protobuf::internal::StringCheckUTF8(ptr, size, ctx));
          ::google::protobuf::internal::InlineGreedyStringParser(object, ptr, size, ctx);
          ptr += size;
          if (ptr >= end) break;
        } while ((::google::protobuf::io::UnalignedLoad<::google::protobuf::uint64>(ptr) & 255) == 26 && (ptr += 1));
        break;
      }
      // bool codegen = 4;
      case 4: {
        if (static_cast<::google::protobuf::uint8>(tag) != 32) goto handle_unusual;
        msg->set_codegen(::google::protobuf::internal::ReadVarint(&ptr));
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        break;
      }
      // bool debug = 5;
      case 5: {
        if (static_cast<::google::protobuf::uint8>(tag) != 40) goto handle_unusual;
        msg->set_debug(::google::protobuf::internal::ReadVarint(&ptr));
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        break;
      }
      // bool isGPU = 6;
      case 6: {
        if (static_cast<::google::protobuf::uint8>(tag) != 48) goto handle_unusual;
        msg->set_isgpu(::google::protobuf::internal::ReadVarint(&ptr));
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        break;
      }
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->EndGroup(tag);
          return ptr;
        }
        auto res = UnknownFieldParse(tag, {_InternalParse, msg},
          ptr, end, msg->_internal_metadata_.mutable_unknown_fields(), ctx);
        ptr = res.first;
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr != nullptr);
        if (res.second) return ptr;
      }
    }  // switch
  }  // while
  return ptr;
string_till_end:
  static_cast<::std::string*>(object)->clear();
  static_cast<::std::string*>(object)->reserve(size);
  goto len_delim_till_end;
len_delim_till_end:
  return ctx->StoreAndTailCall(ptr, end, {_InternalParse, msg},
                               {parser_till_end, object}, size);
}
#else  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
bool PipelineInfo::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!PROTOBUF_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:ShadowVM.PipelineInfo)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // string id = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (10 & 0xFF)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_id()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->id().data(), static_cast<int>(this->id().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "ShadowVM.PipelineInfo.id"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated .ShadowVM.OperatorInfo workflow = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (18 & 0xFF)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
                input, add_workflow()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated string pre_pipeline_id = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (26 & 0xFF)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->add_pre_pipeline_id()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->pre_pipeline_id(this->pre_pipeline_id_size() - 1).data(),
            static_cast<int>(this->pre_pipeline_id(this->pre_pipeline_id_size() - 1).length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "ShadowVM.PipelineInfo.pre_pipeline_id"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // bool codegen = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (32 & 0xFF)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &codegen_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // bool debug = 5;
      case 5: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (40 & 0xFF)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &debug_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // bool isGPU = 6;
      case 6: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (48 & 0xFF)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &isgpu_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:ShadowVM.PipelineInfo)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:ShadowVM.PipelineInfo)
  return false;
#undef DO_
}
#endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER

void PipelineInfo::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:ShadowVM.PipelineInfo)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string id = 1;
  if (this->id().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->id().data(), static_cast<int>(this->id().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "ShadowVM.PipelineInfo.id");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->id(), output);
  }

  // repeated .ShadowVM.OperatorInfo workflow = 2;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->workflow_size()); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2,
      this->workflow(static_cast<int>(i)),
      output);
  }

  // repeated string pre_pipeline_id = 3;
  for (int i = 0, n = this->pre_pipeline_id_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->pre_pipeline_id(i).data(), static_cast<int>(this->pre_pipeline_id(i).length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "ShadowVM.PipelineInfo.pre_pipeline_id");
    ::google::protobuf::internal::WireFormatLite::WriteString(
      3, this->pre_pipeline_id(i), output);
  }

  // bool codegen = 4;
  if (this->codegen() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(4, this->codegen(), output);
  }

  // bool debug = 5;
  if (this->debug() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(5, this->debug(), output);
  }

  // bool isGPU = 6;
  if (this->isgpu() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(6, this->isgpu(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:ShadowVM.PipelineInfo)
}

::google::protobuf::uint8* PipelineInfo::InternalSerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:ShadowVM.PipelineInfo)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string id = 1;
  if (this->id().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->id().data(), static_cast<int>(this->id().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "ShadowVM.PipelineInfo.id");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->id(), target);
  }

  // repeated .ShadowVM.OperatorInfo workflow = 2;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->workflow_size()); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        2, this->workflow(static_cast<int>(i)), target);
  }

  // repeated string pre_pipeline_id = 3;
  for (int i = 0, n = this->pre_pipeline_id_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->pre_pipeline_id(i).data(), static_cast<int>(this->pre_pipeline_id(i).length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "ShadowVM.PipelineInfo.pre_pipeline_id");
    target = ::google::protobuf::internal::WireFormatLite::
      WriteStringToArray(3, this->pre_pipeline_id(i), target);
  }

  // bool codegen = 4;
  if (this->codegen() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(4, this->codegen(), target);
  }

  // bool debug = 5;
  if (this->debug() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(5, this->debug(), target);
  }

  // bool isGPU = 6;
  if (this->isgpu() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(6, this->isgpu(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:ShadowVM.PipelineInfo)
  return target;
}

size_t PipelineInfo::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:ShadowVM.PipelineInfo)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // repeated .ShadowVM.OperatorInfo workflow = 2;
  {
    unsigned int count = static_cast<unsigned int>(this->workflow_size());
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          this->workflow(static_cast<int>(i)));
    }
  }

  // repeated string pre_pipeline_id = 3;
  total_size += 1 *
      ::google::protobuf::internal::FromIntSize(this->pre_pipeline_id_size());
  for (int i = 0, n = this->pre_pipeline_id_size(); i < n; i++) {
    total_size += ::google::protobuf::internal::WireFormatLite::StringSize(
      this->pre_pipeline_id(i));
  }

  // string id = 1;
  if (this->id().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->id());
  }

  // bool codegen = 4;
  if (this->codegen() != 0) {
    total_size += 1 + 1;
  }

  // bool debug = 5;
  if (this->debug() != 0) {
    total_size += 1 + 1;
  }

  // bool isGPU = 6;
  if (this->isgpu() != 0) {
    total_size += 1 + 1;
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void PipelineInfo::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:ShadowVM.PipelineInfo)
  GOOGLE_DCHECK_NE(&from, this);
  const PipelineInfo* source =
      ::google::protobuf::DynamicCastToGenerated<PipelineInfo>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:ShadowVM.PipelineInfo)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:ShadowVM.PipelineInfo)
    MergeFrom(*source);
  }
}

void PipelineInfo::MergeFrom(const PipelineInfo& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:ShadowVM.PipelineInfo)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  workflow_.MergeFrom(from.workflow_);
  pre_pipeline_id_.MergeFrom(from.pre_pipeline_id_);
  if (from.id().size() > 0) {

    id_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.id_);
  }
  if (from.codegen() != 0) {
    set_codegen(from.codegen());
  }
  if (from.debug() != 0) {
    set_debug(from.debug());
  }
  if (from.isgpu() != 0) {
    set_isgpu(from.isgpu());
  }
}

void PipelineInfo::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:ShadowVM.PipelineInfo)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void PipelineInfo::CopyFrom(const PipelineInfo& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:ShadowVM.PipelineInfo)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool PipelineInfo::IsInitialized() const {
  return true;
}

void PipelineInfo::Swap(PipelineInfo* other) {
  if (other == this) return;
  InternalSwap(other);
}
void PipelineInfo::InternalSwap(PipelineInfo* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
  CastToBase(&workflow_)->InternalSwap(CastToBase(&other->workflow_));
  pre_pipeline_id_.InternalSwap(CastToBase(&other->pre_pipeline_id_));
  id_.Swap(&other->id_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  swap(codegen_, other->codegen_);
  swap(debug_, other->debug_);
  swap(isgpu_, other->isgpu_);
}

::google::protobuf::Metadata PipelineInfo::GetMetadata() const {
  ::google::protobuf::internal::AssignDescriptors(&::assign_descriptors_table_svm_2eproto);
  return ::file_level_metadata_svm_2eproto[kIndexInFileMessages];
}


// ===================================================================

void GraphInfo::InitAsDefaultInstance() {
}
class GraphInfo::HasBitSetters {
 public:
};

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int GraphInfo::kIdFieldNumber;
const int GraphInfo::kPipelineListFieldNumber;
const int GraphInfo::kUdfFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

GraphInfo::GraphInfo()
  : ::google::protobuf::Message(), _internal_metadata_(nullptr) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:ShadowVM.GraphInfo)
}
GraphInfo::GraphInfo(const GraphInfo& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(nullptr),
      pipeline_list_(from.pipeline_list_),
      udf_(from.udf_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  id_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.id().size() > 0) {
    id_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.id_);
  }
  // @@protoc_insertion_point(copy_constructor:ShadowVM.GraphInfo)
}

void GraphInfo::SharedCtor() {
  ::google::protobuf::internal::InitSCC(
      &scc_info_GraphInfo_svm_2eproto.base);
  id_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

GraphInfo::~GraphInfo() {
  // @@protoc_insertion_point(destructor:ShadowVM.GraphInfo)
  SharedDtor();
}

void GraphInfo::SharedDtor() {
  id_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void GraphInfo::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const GraphInfo& GraphInfo::default_instance() {
  ::google::protobuf::internal::InitSCC(&::scc_info_GraphInfo_svm_2eproto.base);
  return *internal_default_instance();
}


void GraphInfo::Clear() {
// @@protoc_insertion_point(message_clear_start:ShadowVM.GraphInfo)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  pipeline_list_.Clear();
  udf_.Clear();
  id_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  _internal_metadata_.Clear();
}

#if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
const char* GraphInfo::_InternalParse(const char* begin, const char* end, void* object,
                  ::google::protobuf::internal::ParseContext* ctx) {
  auto msg = static_cast<GraphInfo*>(object);
  ::google::protobuf::int32 size; (void)size;
  int depth; (void)depth;
  ::google::protobuf::uint32 tag;
  ::google::protobuf::internal::ParseFunc parser_till_end; (void)parser_till_end;
  auto ptr = begin;
  while (ptr < end) {
    ptr = ::google::protobuf::io::Parse32(ptr, &tag);
    GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
    switch (tag >> 3) {
      // string id = 1;
      case 1: {
        if (static_cast<::google::protobuf::uint8>(tag) != 10) goto handle_unusual;
        ptr = ::google::protobuf::io::ReadSize(ptr, &size);
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        ctx->extra_parse_data().SetFieldName("ShadowVM.GraphInfo.id");
        object = msg->mutable_id();
        if (size > end - ptr + ::google::protobuf::internal::ParseContext::kSlopBytes) {
          parser_till_end = ::google::protobuf::internal::GreedyStringParserUTF8;
          goto string_till_end;
        }
        GOOGLE_PROTOBUF_PARSER_ASSERT(::google::protobuf::internal::StringCheckUTF8(ptr, size, ctx));
        ::google::protobuf::internal::InlineGreedyStringParser(object, ptr, size, ctx);
        ptr += size;
        break;
      }
      // repeated .ShadowVM.PipelineInfo pipeline_list = 2;
      case 2: {
        if (static_cast<::google::protobuf::uint8>(tag) != 18) goto handle_unusual;
        do {
          ptr = ::google::protobuf::io::ReadSize(ptr, &size);
          GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
          parser_till_end = ::ShadowVM::PipelineInfo::_InternalParse;
          object = msg->add_pipeline_list();
          if (size > end - ptr) goto len_delim_till_end;
          ptr += size;
          GOOGLE_PROTOBUF_PARSER_ASSERT(ctx->ParseExactRange(
              {parser_till_end, object}, ptr - size, ptr));
          if (ptr >= end) break;
        } while ((::google::protobuf::io::UnalignedLoad<::google::protobuf::uint64>(ptr) & 255) == 18 && (ptr += 1));
        break;
      }
      // repeated .ShadowVM.UDFInfo udf = 3;
      case 3: {
        if (static_cast<::google::protobuf::uint8>(tag) != 26) goto handle_unusual;
        do {
          ptr = ::google::protobuf::io::ReadSize(ptr, &size);
          GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
          parser_till_end = ::ShadowVM::UDFInfo::_InternalParse;
          object = msg->add_udf();
          if (size > end - ptr) goto len_delim_till_end;
          ptr += size;
          GOOGLE_PROTOBUF_PARSER_ASSERT(ctx->ParseExactRange(
              {parser_till_end, object}, ptr - size, ptr));
          if (ptr >= end) break;
        } while ((::google::protobuf::io::UnalignedLoad<::google::protobuf::uint64>(ptr) & 255) == 26 && (ptr += 1));
        break;
      }
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->EndGroup(tag);
          return ptr;
        }
        auto res = UnknownFieldParse(tag, {_InternalParse, msg},
          ptr, end, msg->_internal_metadata_.mutable_unknown_fields(), ctx);
        ptr = res.first;
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr != nullptr);
        if (res.second) return ptr;
      }
    }  // switch
  }  // while
  return ptr;
string_till_end:
  static_cast<::std::string*>(object)->clear();
  static_cast<::std::string*>(object)->reserve(size);
  goto len_delim_till_end;
len_delim_till_end:
  return ctx->StoreAndTailCall(ptr, end, {_InternalParse, msg},
                               {parser_till_end, object}, size);
}
#else  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
bool GraphInfo::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!PROTOBUF_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:ShadowVM.GraphInfo)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // string id = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (10 & 0xFF)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_id()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->id().data(), static_cast<int>(this->id().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "ShadowVM.GraphInfo.id"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated .ShadowVM.PipelineInfo pipeline_list = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (18 & 0xFF)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
                input, add_pipeline_list()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated .ShadowVM.UDFInfo udf = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (26 & 0xFF)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
                input, add_udf()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:ShadowVM.GraphInfo)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:ShadowVM.GraphInfo)
  return false;
#undef DO_
}
#endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER

void GraphInfo::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:ShadowVM.GraphInfo)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string id = 1;
  if (this->id().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->id().data(), static_cast<int>(this->id().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "ShadowVM.GraphInfo.id");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->id(), output);
  }

  // repeated .ShadowVM.PipelineInfo pipeline_list = 2;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->pipeline_list_size()); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2,
      this->pipeline_list(static_cast<int>(i)),
      output);
  }

  // repeated .ShadowVM.UDFInfo udf = 3;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->udf_size()); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      3,
      this->udf(static_cast<int>(i)),
      output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:ShadowVM.GraphInfo)
}

::google::protobuf::uint8* GraphInfo::InternalSerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:ShadowVM.GraphInfo)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string id = 1;
  if (this->id().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->id().data(), static_cast<int>(this->id().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "ShadowVM.GraphInfo.id");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->id(), target);
  }

  // repeated .ShadowVM.PipelineInfo pipeline_list = 2;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->pipeline_list_size()); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        2, this->pipeline_list(static_cast<int>(i)), target);
  }

  // repeated .ShadowVM.UDFInfo udf = 3;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->udf_size()); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        3, this->udf(static_cast<int>(i)), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:ShadowVM.GraphInfo)
  return target;
}

size_t GraphInfo::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:ShadowVM.GraphInfo)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // repeated .ShadowVM.PipelineInfo pipeline_list = 2;
  {
    unsigned int count = static_cast<unsigned int>(this->pipeline_list_size());
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          this->pipeline_list(static_cast<int>(i)));
    }
  }

  // repeated .ShadowVM.UDFInfo udf = 3;
  {
    unsigned int count = static_cast<unsigned int>(this->udf_size());
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          this->udf(static_cast<int>(i)));
    }
  }

  // string id = 1;
  if (this->id().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->id());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void GraphInfo::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:ShadowVM.GraphInfo)
  GOOGLE_DCHECK_NE(&from, this);
  const GraphInfo* source =
      ::google::protobuf::DynamicCastToGenerated<GraphInfo>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:ShadowVM.GraphInfo)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:ShadowVM.GraphInfo)
    MergeFrom(*source);
  }
}

void GraphInfo::MergeFrom(const GraphInfo& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:ShadowVM.GraphInfo)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  pipeline_list_.MergeFrom(from.pipeline_list_);
  udf_.MergeFrom(from.udf_);
  if (from.id().size() > 0) {

    id_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.id_);
  }
}

void GraphInfo::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:ShadowVM.GraphInfo)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void GraphInfo::CopyFrom(const GraphInfo& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:ShadowVM.GraphInfo)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool GraphInfo::IsInitialized() const {
  return true;
}

void GraphInfo::Swap(GraphInfo* other) {
  if (other == this) return;
  InternalSwap(other);
}
void GraphInfo::InternalSwap(GraphInfo* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
  CastToBase(&pipeline_list_)->InternalSwap(CastToBase(&other->pipeline_list_));
  CastToBase(&udf_)->InternalSwap(CastToBase(&other->udf_));
  id_.Swap(&other->id_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
}

::google::protobuf::Metadata GraphInfo::GetMetadata() const {
  ::google::protobuf::internal::AssignDescriptors(&::assign_descriptors_table_svm_2eproto);
  return ::file_level_metadata_svm_2eproto[kIndexInFileMessages];
}


// ===================================================================

void Ret::InitAsDefaultInstance() {
}
class Ret::HasBitSetters {
 public:
};

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int Ret::kSuccessFieldNumber;
const int Ret::kInfoFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

Ret::Ret()
  : ::google::protobuf::Message(), _internal_metadata_(nullptr) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:ShadowVM.Ret)
}
Ret::Ret(const Ret& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(nullptr) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  info_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.info().size() > 0) {
    info_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.info_);
  }
  success_ = from.success_;
  // @@protoc_insertion_point(copy_constructor:ShadowVM.Ret)
}

void Ret::SharedCtor() {
  ::google::protobuf::internal::InitSCC(
      &scc_info_Ret_svm_2eproto.base);
  info_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  success_ = false;
}

Ret::~Ret() {
  // @@protoc_insertion_point(destructor:ShadowVM.Ret)
  SharedDtor();
}

void Ret::SharedDtor() {
  info_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void Ret::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const Ret& Ret::default_instance() {
  ::google::protobuf::internal::InitSCC(&::scc_info_Ret_svm_2eproto.base);
  return *internal_default_instance();
}


void Ret::Clear() {
// @@protoc_insertion_point(message_clear_start:ShadowVM.Ret)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  info_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  success_ = false;
  _internal_metadata_.Clear();
}

#if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
const char* Ret::_InternalParse(const char* begin, const char* end, void* object,
                  ::google::protobuf::internal::ParseContext* ctx) {
  auto msg = static_cast<Ret*>(object);
  ::google::protobuf::int32 size; (void)size;
  int depth; (void)depth;
  ::google::protobuf::uint32 tag;
  ::google::protobuf::internal::ParseFunc parser_till_end; (void)parser_till_end;
  auto ptr = begin;
  while (ptr < end) {
    ptr = ::google::protobuf::io::Parse32(ptr, &tag);
    GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
    switch (tag >> 3) {
      // bool success = 1;
      case 1: {
        if (static_cast<::google::protobuf::uint8>(tag) != 8) goto handle_unusual;
        msg->set_success(::google::protobuf::internal::ReadVarint(&ptr));
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        break;
      }
      // string info = 2;
      case 2: {
        if (static_cast<::google::protobuf::uint8>(tag) != 18) goto handle_unusual;
        ptr = ::google::protobuf::io::ReadSize(ptr, &size);
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        ctx->extra_parse_data().SetFieldName("ShadowVM.Ret.info");
        object = msg->mutable_info();
        if (size > end - ptr + ::google::protobuf::internal::ParseContext::kSlopBytes) {
          parser_till_end = ::google::protobuf::internal::GreedyStringParserUTF8;
          goto string_till_end;
        }
        GOOGLE_PROTOBUF_PARSER_ASSERT(::google::protobuf::internal::StringCheckUTF8(ptr, size, ctx));
        ::google::protobuf::internal::InlineGreedyStringParser(object, ptr, size, ctx);
        ptr += size;
        break;
      }
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->EndGroup(tag);
          return ptr;
        }
        auto res = UnknownFieldParse(tag, {_InternalParse, msg},
          ptr, end, msg->_internal_metadata_.mutable_unknown_fields(), ctx);
        ptr = res.first;
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr != nullptr);
        if (res.second) return ptr;
      }
    }  // switch
  }  // while
  return ptr;
string_till_end:
  static_cast<::std::string*>(object)->clear();
  static_cast<::std::string*>(object)->reserve(size);
  goto len_delim_till_end;
len_delim_till_end:
  return ctx->StoreAndTailCall(ptr, end, {_InternalParse, msg},
                               {parser_till_end, object}, size);
}
#else  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
bool Ret::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!PROTOBUF_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:ShadowVM.Ret)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // bool success = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (8 & 0xFF)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &success_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string info = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (18 & 0xFF)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_info()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->info().data(), static_cast<int>(this->info().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "ShadowVM.Ret.info"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:ShadowVM.Ret)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:ShadowVM.Ret)
  return false;
#undef DO_
}
#endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER

void Ret::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:ShadowVM.Ret)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // bool success = 1;
  if (this->success() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(1, this->success(), output);
  }

  // string info = 2;
  if (this->info().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->info().data(), static_cast<int>(this->info().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "ShadowVM.Ret.info");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->info(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:ShadowVM.Ret)
}

::google::protobuf::uint8* Ret::InternalSerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:ShadowVM.Ret)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // bool success = 1;
  if (this->success() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(1, this->success(), target);
  }

  // string info = 2;
  if (this->info().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->info().data(), static_cast<int>(this->info().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "ShadowVM.Ret.info");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->info(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:ShadowVM.Ret)
  return target;
}

size_t Ret::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:ShadowVM.Ret)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string info = 2;
  if (this->info().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->info());
  }

  // bool success = 1;
  if (this->success() != 0) {
    total_size += 1 + 1;
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void Ret::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:ShadowVM.Ret)
  GOOGLE_DCHECK_NE(&from, this);
  const Ret* source =
      ::google::protobuf::DynamicCastToGenerated<Ret>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:ShadowVM.Ret)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:ShadowVM.Ret)
    MergeFrom(*source);
  }
}

void Ret::MergeFrom(const Ret& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:ShadowVM.Ret)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.info().size() > 0) {

    info_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.info_);
  }
  if (from.success() != 0) {
    set_success(from.success());
  }
}

void Ret::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:ShadowVM.Ret)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Ret::CopyFrom(const Ret& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:ShadowVM.Ret)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Ret::IsInitialized() const {
  return true;
}

void Ret::Swap(Ret* other) {
  if (other == this) return;
  InternalSwap(other);
}
void Ret::InternalSwap(Ret* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
  info_.Swap(&other->info_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  swap(success_, other->success_);
}

::google::protobuf::Metadata Ret::GetMetadata() const {
  ::google::protobuf::internal::AssignDescriptors(&::assign_descriptors_table_svm_2eproto);
  return ::file_level_metadata_svm_2eproto[kIndexInFileMessages];
}


// @@protoc_insertion_point(namespace_scope)
}  // namespace ShadowVM
namespace google {
namespace protobuf {
template<> PROTOBUF_NOINLINE ::ShadowVM::HelloRequest* Arena::CreateMaybeMessage< ::ShadowVM::HelloRequest >(Arena* arena) {
  return Arena::CreateInternal< ::ShadowVM::HelloRequest >(arena);
}
template<> PROTOBUF_NOINLINE ::ShadowVM::TestRequest* Arena::CreateMaybeMessage< ::ShadowVM::TestRequest >(Arena* arena) {
  return Arena::CreateInternal< ::ShadowVM::TestRequest >(arena);
}
template<> PROTOBUF_NOINLINE ::ShadowVM::HelloReply* Arena::CreateMaybeMessage< ::ShadowVM::HelloReply >(Arena* arena) {
  return Arena::CreateInternal< ::ShadowVM::HelloReply >(arena);
}
template<> PROTOBUF_NOINLINE ::ShadowVM::TestReply* Arena::CreateMaybeMessage< ::ShadowVM::TestReply >(Arena* arena) {
  return Arena::CreateInternal< ::ShadowVM::TestReply >(arena);
}
template<> PROTOBUF_NOINLINE ::ShadowVM::BulkInfo* Arena::CreateMaybeMessage< ::ShadowVM::BulkInfo >(Arena* arena) {
  return Arena::CreateInternal< ::ShadowVM::BulkInfo >(arena);
}
template<> PROTOBUF_NOINLINE ::ShadowVM::ColumnInfo* Arena::CreateMaybeMessage< ::ShadowVM::ColumnInfo >(Arena* arena) {
  return Arena::CreateInternal< ::ShadowVM::ColumnInfo >(arena);
}
template<> PROTOBUF_NOINLINE ::ShadowVM::ObjectInfo* Arena::CreateMaybeMessage< ::ShadowVM::ObjectInfo >(Arena* arena) {
  return Arena::CreateInternal< ::ShadowVM::ObjectInfo >(arena);
}
template<> PROTOBUF_NOINLINE ::ShadowVM::DependencyInfo* Arena::CreateMaybeMessage< ::ShadowVM::DependencyInfo >(Arena* arena) {
  return Arena::CreateInternal< ::ShadowVM::DependencyInfo >(arena);
}
template<> PROTOBUF_NOINLINE ::ShadowVM::OperatorInfo_ArgsEntry_DoNotUse* Arena::CreateMaybeMessage< ::ShadowVM::OperatorInfo_ArgsEntry_DoNotUse >(Arena* arena) {
  return Arena::CreateInternal< ::ShadowVM::OperatorInfo_ArgsEntry_DoNotUse >(arena);
}
template<> PROTOBUF_NOINLINE ::ShadowVM::OperatorInfo* Arena::CreateMaybeMessage< ::ShadowVM::OperatorInfo >(Arena* arena) {
  return Arena::CreateInternal< ::ShadowVM::OperatorInfo >(arena);
}
template<> PROTOBUF_NOINLINE ::ShadowVM::UDFInfo* Arena::CreateMaybeMessage< ::ShadowVM::UDFInfo >(Arena* arena) {
  return Arena::CreateInternal< ::ShadowVM::UDFInfo >(arena);
}
template<> PROTOBUF_NOINLINE ::ShadowVM::PipelineInfo* Arena::CreateMaybeMessage< ::ShadowVM::PipelineInfo >(Arena* arena) {
  return Arena::CreateInternal< ::ShadowVM::PipelineInfo >(arena);
}
template<> PROTOBUF_NOINLINE ::ShadowVM::GraphInfo* Arena::CreateMaybeMessage< ::ShadowVM::GraphInfo >(Arena* arena) {
  return Arena::CreateInternal< ::ShadowVM::GraphInfo >(arena);
}
template<> PROTOBUF_NOINLINE ::ShadowVM::Ret* Arena::CreateMaybeMessage< ::ShadowVM::Ret >(Arena* arena) {
  return Arena::CreateInternal< ::ShadowVM::Ret >(arena);
}
}  // namespace protobuf
}  // namespace google

// @@protoc_insertion_point(global_scope)
#include <google/protobuf/port_undef.inc>
